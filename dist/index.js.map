{"version":3,"sources":["../src/libs/danfe.ts","../src/libs/danfce.ts","../src/libs/dav55.ts"],"sourcesContent":["import { PDFDocument, StandardFonts, rgb, PDFFont } from \"pdf-lib\"\r\nimport { XMLParser } from \"fast-xml-parser\"\r\nimport JsBarcode from \"jsbarcode\"\r\nimport canvas from \"canvas\"\r\n\r\n\r\n\r\nconst DANFe = async (data: { xml?: string, consulta?: string, logo?: any | null, imgDemo?: string | null } = {}) => {\r\n    const parser = new XMLParser({\r\n        ignoreAttributes: false,\r\n        attributeNamePrefix: \"@\",\r\n        parseTagValue: false,       // Evita conversão automática de valores\r\n    });\r\n\r\n    var PDF: {\r\n        doc: any;\r\n        pages: any;\r\n        width: number;\r\n        height: number;\r\n        mtBlock: number;\r\n        barCode: string | null;\r\n    } = {\r\n        doc: await PDFDocument.create(),\r\n        pages: [],\r\n        width: 0,\r\n        height: 0,\r\n        mtBlock: 0,\r\n        barCode: null\r\n    }, isBrowser = typeof window !== 'undefined',\r\n        xml = parser.parse(data.xml || \"\"),\r\n        consulta = typeof data.consulta != \"undefined\" ? parser.parse(data.consulta) : {},\r\n        logo = data.logo,\r\n        imgDemo = data.imgDemo,\r\n        protNFe = null;\r\n\r\n    //Multiplos eventos\r\n    if (typeof consulta?.retConsSitNFe?.procEventoNFe != \"undefined\")\r\n        consulta.retConsSitNFe.procEventoNFe = Array.isArray(consulta.retConsSitNFe.procEventoNFe) ? consulta.retConsSitNFe.procEventoNFe : [consulta.retConsSitNFe.procEventoNFe];\r\n\r\n    if (xml.nfeProc) {\r\n        xml = xml.nfeProc;\r\n    }\r\n\r\n    //Configuração do PDF\r\n    PDF.pages.push(PDF.doc.addPage());\r\n    PDF.width = (PDF.pages[0]).getWidth();\r\n    PDF.height = (PDF.pages[0]).getHeight();\r\n\r\n    // ------------------------   FUNÇOES ------------------------------\r\n\r\n    async function addRet(page: any, x: number, y: number, w: number, h: number) {\r\n        page.drawRectangle({\r\n            x: x + 4,\r\n            y: (PDF.height - h) - (y + 4),\r\n            width: (x + w + 8) >= PDF.width ? (PDF.width - x) - 8 : w,\r\n            height: h,\r\n            borderColor: rgb(0, 0, 0),\r\n            borderWidth: 1\r\n        });\r\n    }\r\n\r\n    //Linha trajada horizontal\r\n    async function addLTH(page: any, x: number, y: number, h: number) {\r\n        const startX = Math.max(x, 4);\r\n        const endX = Math.min(x + h, PDF.width - 4);\r\n        const fixedY = PDF.height - y - 4;\r\n\r\n        page.drawLine({\r\n            start: { x: startX, y: fixedY },\r\n            end: { x: endX, y: fixedY },\r\n            color: rgb(0, 0, 0),\r\n            thickness: 1,\r\n            dashArray: [5, 3],\r\n        });\r\n    }\r\n\r\n    //Linha trajada vertical\r\n    async function addLTV(page: any, x: number, y: number, w: number) {\r\n        const fixedX = Math.max(4, Math.min(x, PDF.width - 4));\r\n        const startY = Math.max(PDF.height - y - 4, 4);\r\n        const endY = Math.max(PDF.height - (y + w) - 4, 4);\r\n\r\n        page.drawLine({\r\n            start: { x: fixedX, y: startY },\r\n            end: { x: fixedX, y: endY },\r\n            color: rgb(0, 0, 0),\r\n            thickness: 1,\r\n            dashArray: [5, 3],\r\n        });\r\n    }\r\n\r\n    async function addTXT({\r\n        page,\r\n        text,\r\n        x,\r\n        y,\r\n        maxWidth,\r\n        fontStyle = 'normal',\r\n        size = 7,\r\n        lineHeight,\r\n        align = 'left',\r\n        cacl = false,\r\n        opacity = 1\r\n    }: {\r\n        page: any;\r\n        text: string;\r\n        x: number;\r\n        y: number;\r\n        opacity?: number;\r\n        maxWidth: number;\r\n        fontStyle?: 'normal' | 'negrito' | 'italic';\r\n        size?: number;\r\n        lineHeight?: number;\r\n        align?: 'left' | 'center' | 'right';\r\n        cacl?: boolean;\r\n    }): Promise<number> {\r\n        let font: PDFFont;\r\n\r\n        switch (fontStyle) {\r\n            case 'negrito':\r\n                font = await PDF.doc.embedFont(StandardFonts.TimesRomanBold);\r\n                break;\r\n            case 'italic':\r\n                font = await PDF.doc.embedFont(StandardFonts.TimesRomanItalic);\r\n                break;\r\n            default:\r\n                font = await PDF.doc.embedFont(StandardFonts.TimesRoman);\r\n        }\r\n\r\n        // Garante que maxWidth não ultrapasse a largura da página\r\n        if (maxWidth + x > PDF.width) maxWidth = PDF.width - x - 2;\r\n\r\n        // Define altura da linha baseada no tamanho da fonte, se não especificada\r\n        const effectiveLineHeight = lineHeight ?? size * .9;\r\n\r\n        const lines = wrapText(text, maxWidth, font, size);\r\n        if (cacl) return lines.length;\r\n\r\n        lines.forEach((line, index) => {\r\n            const textWidth = font.widthOfTextAtSize(line, size);\r\n            let drawX = x + 4;\r\n\r\n            if (align === 'center') {\r\n                drawX = x + (maxWidth - textWidth) / 2;\r\n            } else if (align === 'right') {\r\n                drawX = x + maxWidth - textWidth;\r\n            }\r\n\r\n            page.drawText(line, {\r\n                x: drawX,\r\n                y: ((PDF.height - effectiveLineHeight) - (y + 4)) - index * effectiveLineHeight,\r\n                size,\r\n                font,\r\n                opacity: opacity || 1\r\n            });\r\n        });\r\n        return lines.length;\r\n    }\r\n\r\n\r\n    function wrapText(text: string, maxWidth: number, font: PDFFont, fontSize: number): string[] {\r\n        const words = text.split(' ');\r\n        const lines: string[] = [];\r\n        let line = '';\r\n\r\n        for (let i = 0; i < words.length; i++) {\r\n            const word = words[i];\r\n            const testLine = line + word + ' ';\r\n            const testWidth = font.widthOfTextAtSize(testLine, fontSize);\r\n\r\n            if (testWidth > maxWidth && line !== '') {\r\n                lines.push(line.trim());\r\n                line = word + ' ';\r\n            } else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        if (line.trim() !== '') {\r\n            lines.push(line.trim());\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    function embCNPJCPF(valor: string) {\r\n        // Remove tudo que não for número\r\n        const numeros = valor.replace(/\\D/g, '');\r\n\r\n        if (numeros.length === 11) {\r\n            // Formata CPF: 000.000.000-00\r\n            return numeros.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\r\n        } else if (numeros.length === 14) {\r\n            // Formata CNPJ: 00.000.000/0000-00\r\n            return numeros.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\r\n        } else {\r\n            return valor;\r\n        }\r\n    }\r\n\r\n    // ----------------- FIM FUNÇÕES -----------------------\r\n\r\n\r\n\r\n    // --------------------- blocos ------------------------\\\r\n\r\n    async function gerarBlocos() {\r\n        await bloco0()\r\n        await bloco1()\r\n        await bloco2()\r\n        await bloco3()\r\n        await bloco4()\r\n        await bloco5()\r\n        let fim = await bloco6()\r\n        await bloco7()\r\n        await bloco8()\r\n\r\n        while (!fim) {\r\n            PDF.mtBlock = 0; //Resetar\r\n            PDF.pages.push(PDF.doc.addPage());\r\n            await bloco1()\r\n            fim = await bloco6();\r\n        }\r\n\r\n        for (const [i, page] of PDF.pages.entries()) {\r\n            addTXT({ page, size: 8, text: `Folha ${i + 1}/${PDF.pages.length}`, x: 235, y: (i == 0 ? 142 : 82), maxWidth: PDF.width * 0.19, align: \"center\", fontStyle: \"italic\" });\r\n\r\n            if (xml.NFe.infNFe.ide.tpAmb == \"2\") {\r\n                addTXT({ page, size: 30, text: `NFe EMITIDA EM HOMOLOGAÇÃO SEM VALOR FISCAL`, x: 0, y: PDF.height * 0.5, maxWidth: PDF.width, align: \"center\", opacity: 0.5, fontStyle: \"negrito\" });\r\n            }\r\n\r\n            if (typeof consulta?.retConsSitNFe?.procEventoNFe != \"undefined\") {\r\n                for (const event of consulta.retConsSitNFe.procEventoNFe) {\r\n                    if (event.retEvento.infEvento.tpEvento == \"110111\") {\r\n                        addTXT({ page, size: 50, text: `CANCELADA`, x: 0, y: PDF.height * 0.60, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async function bloco0(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addRet(page, 0, PDF.mtBlock + 0, PDF.width, 50);\r\n        addRet(page, 0, PDF.mtBlock + 0, PDF.width * 0.8, 25);\r\n        addRet(page, 0, PDF.mtBlock + 0, PDF.width * 0.8, 25);\r\n        addRet(page, 0, PDF.mtBlock + 25, PDF.width * 0.8, 25);\r\n        addRet(page, PDF.width * 0.17, PDF.mtBlock + 25, PDF.width * 0.63, 25);\r\n\r\n        addTXT({ page, text: `RECEBEMOS DE ${xml.NFe.infNFe.emit.xNome} OS PRODUTOS E/OU SERVIÇOS CONSTANTES DA NOTA FISCAL ELETRÔNICA INDICADA ABAIXO. EMISSÃO: ${new Date(xml.NFe.infNFe.ide.dhEmi).toLocaleDateString('pt-BR')} VALOR TOTAL: ${parseFloat(xml.NFe.infNFe.total.ICMSTot.vNF).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })} DESTINATÁRIO: NF-E EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL - ${xml.NFe.infNFe.dest.enderDest.xLgr}, ${xml.NFe.infNFe.dest.enderDest.nro} ${xml.NFe.infNFe.dest.enderDest.xBairro} ${xml.NFe.infNFe.dest.enderDest.xMun}-${xml.NFe.infNFe.dest.enderDest.UF}`, x: 2, y: PDF.mtBlock + 2, maxWidth: PDF.width * 0.78 });\r\n        addTXT({ page, text: \"DATA DE RECEBIMENTO\", x: 2, y: PDF.mtBlock + 25, maxWidth: PDF.width * 0.78 });\r\n        addTXT({ page, text: \"ASSINATURA DO RECEBEDOR\", x: PDF.width * 0.173, y: PDF.mtBlock + 25, maxWidth: PDF.width });\r\n        addTXT({ page, size: 18, text: \"NFe\", x: PDF.width * 0.8, y: PDF.mtBlock, maxWidth: PDF.width * 0.8, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 11, text: `Nº. ${xml.NFe.infNFe.ide.nNF.padStart(9, '0')}`, x: PDF.width * 0.8, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.8, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 11, text: `Série ${xml.NFe.infNFe.ide.serie.padStart(3, '0')}`, x: PDF.width * 0.8, y: PDF.mtBlock + 30, maxWidth: PDF.width * 0.8, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addLTH(page, 0, PDF.mtBlock + 56, PDF.width);\r\n        PDF.mtBlock += 60;\r\n    }\r\n\r\n\r\n    async function bloco1(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addRet(page, 0, PDF.mtBlock, PDF.width, 132);\r\n        addRet(page, 0, PDF.mtBlock, PDF.width, 92);\r\n        addRet(page, 0, PDF.mtBlock, PDF.width, 112);\r\n        addRet(page, PDF.width * 0.401, PDF.mtBlock + 0, PDF.width, 92);\r\n        addRet(page, PDF.width * 0.53, PDF.mtBlock + 38, 16, 20);\r\n        addRet(page, PDF.width * 0.57, PDF.mtBlock + 0, PDF.width, 47);\r\n        addRet(page, PDF.width * 0.57, PDF.mtBlock + 47, PDF.width, 23);\r\n        addRet(page, PDF.width * 0.57, PDF.mtBlock + 70, PDF.width, 22);\r\n        addRet(page, PDF.width * 0.57, PDF.mtBlock + 92, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.745, PDF.mtBlock + 112, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.497, PDF.mtBlock + 112, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.25, PDF.mtBlock + 112, PDF.width, 20);\r\n\r\n        addTXT({ page, text: \"IDENTIFICAÇÃO DO EMITENTE\", x: 0, y: PDF.mtBlock + 2, maxWidth: PDF.width * 0.4, align: \"center\" });\r\n\r\n        let mt = 0;\r\n        if (typeof logo !== \"undefined\") {\r\n            await addIMG({ page, img: logo, x: PDF.width * 0.18, y: PDF.mtBlock + 14, h: 37, w: 37 });\r\n            mt += 12;\r\n        }\r\n\r\n        //Redimencionar nome.\r\n        let sizeNome = 12;\r\n        while (await addTXT({ page, size: sizeNome, text: `${xml.NFe.infNFe.emit.xNome}`, x: 1, y: PDF.mtBlock + 35 + mt, maxWidth: PDF.width * 0.4, align: \"center\", fontStyle: \"negrito\", cacl: true }) >= 2) {\r\n            sizeNome--;\r\n        }\r\n\r\n        addTXT({ page, size: sizeNome, text: `${xml.NFe.infNFe.emit.xNome}`, x: 1, y: PDF.mtBlock + 35 + mt, maxWidth: PDF.width * 0.4, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 9, text: `${xml.NFe.infNFe.emit.enderEmit.xLgr}, N°${xml.NFe.infNFe.emit.enderEmit.nro}`, x: 0, y: PDF.mtBlock + 45 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n        addTXT({ page, size: 9, text: `${xml.NFe.infNFe.emit.enderEmit.xBairro} - ${xml.NFe.infNFe.emit.enderEmit.CEP}`, x: 0, y: PDF.mtBlock + 55 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n        addTXT({ page, size: 9, text: `${xml.NFe.infNFe.emit.enderEmit.xMun} - ${xml.NFe.infNFe.emit.enderEmit.UF} Fone: ${xml.NFe.infNFe.emit.enderEmit?.fone || ''}`, x: 0, y: PDF.mtBlock + 65 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n\r\n        addTXT({ page, size: 16, text: \"DANFE\", x: PDF.width * 0.393, y: PDF.mtBlock + 3, maxWidth: PDF.width * 0.2, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 8, text: \"Documento Auxiliar da Nota Fiscal Eletrônica\", x: PDF.width * 0.4, y: PDF.mtBlock + 19, maxWidth: PDF.width * 0.18, align: \"center\" });\r\n        addTXT({ page, size: 8, text: \"0 - ENTRADA\", x: PDF.width * 0.415, y: PDF.mtBlock + 42, maxWidth: PDF.width * 0.19, align: \"left\" });\r\n        addTXT({ page, size: 8, text: \"1 - SAÍDA\", x: PDF.width * 0.415, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.19, align: \"left\" });\r\n        addTXT({ page, size: 20, text: xml.NFe.infNFe.ide.tpNF, x: PDF.width * 0.534, y: PDF.mtBlock + 37, maxWidth: PDF.width * 0.19, align: \"left\" });\r\n        addTXT({ page, size: 10, text: `Nº. ${xml.NFe.infNFe.ide.nNF.padStart(9, '0')}`, x: PDF.width * 0.4, y: PDF.mtBlock + 63, maxWidth: PDF.width * 0.19, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 10, text: `Série ${xml.NFe.infNFe.ide.serie.padStart(3, '0')}`, x: PDF.width * 0.398, y: PDF.mtBlock + 72, maxWidth: PDF.width * 0.19, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        await addIMG({ page, img: await barCode() as string, x: PDF.width * 0.595, y: PDF.mtBlock + 6, w: PDF.width * 0.39, h: 44 });\r\n\r\n        addTXT({ page, text: \"CHAVE DE ACESSO\", x: PDF.width * 0.575, y: PDF.mtBlock + 47, maxWidth: PDF.width * 0.19 });\r\n        addTXT({ page, size: 8, text: xml.NFe.infNFe[\"@Id\"].replace(\"NFe\", \"\").replace(/(\\d{4})(?=\\d)/g, \"$1 \"), x: PDF.width * 0.595, y: PDF.mtBlock + 58, maxWidth: PDF.width * 0.39, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 8, text: \"Consulta de autenticidade no portal nacional da NF-e\", x: PDF.width * 0.595, y: PDF.mtBlock + 70, maxWidth: PDF.width * 0.39, align: \"center\" });\r\n        addTXT({ page, size: 8, text: \" www.nfe.fazenda.gov.br/portal ou no site da Sefaz Autorizadora\", x: PDF.width * 0.595, y: PDF.mtBlock + 81, maxWidth: PDF.width * 0.39, align: \"center\" });\r\n\r\n        console.log(xml.protNFe?.infProt?.nProt)\r\n        addTXT({ page, text: \"PROTOCOLO DE AUTORIZAÇÃO DE USO\", x: PDF.width * 0.575, y: PDF.mtBlock + 92, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: `${xml.protNFe?.infProt?.nProt || \"\"} - ${xml.protNFe?.infProt?.dhRecbto ? new Date(xml.protNFe.infProt.dhRecbto).toLocaleString('pt-BR') : \"\"}`, x: PDF.width * 0.595, y: PDF.mtBlock + 101, maxWidth: PDF.width * 0.39, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"NATUREZA DA OPERAÇÃO\", x: 3, y: PDF.mtBlock + 92, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.NFe.infNFe.ide.natOp, x: 3, y: PDF.mtBlock + 101, maxWidth: PDF.width * 0.58, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL\", x: 3, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.NFe.infNFe.emit.IE || \"\", x: 3, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.25, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO MUNICIPAL\", x: PDF.width * 0.255, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.NFe.infNFe.emit.IM || \"\", x: PDF.width * 0.355, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.05, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL DO SUBST. TRIBUT.\", x: PDF.width * 0.5, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.NFe.infNFe.emit.IEST || \"\", x: PDF.width * 0.6, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.05, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CNPJ/CPF\", x: PDF.width * 0.75, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: embCNPJCPF(xml.NFe.infNFe.emit?.CNPJ || xml.NFe.infNFe.emit?.CPF || \"\"), x: PDF.width * 0.845, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.05, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        PDF.mtBlock += 133;\r\n    }\r\n\r\n    async function barCode(): Promise<Buffer | string> {\r\n        if (PDF.barCode != null) return PDF.barCode;\r\n        const isNode = typeof window === 'undefined';\r\n        if (isNode) {\r\n            // --- NODE.JS ---\r\n            const { createCanvas } = await import('canvas');\r\n            const canvas = createCanvas(400, 100);\r\n            JsBarcode(canvas, xml.NFe.infNFe[\"@Id\"], {\r\n                format: 'CODE128',\r\n                displayValue: false,\r\n                fontSize: 18,\r\n            });\r\n\r\n            PDF.barCode = canvas.toDataURL('image/png');\r\n            // Retorna base64 (imagem PNG)\r\n            return PDF.barCode;\r\n        } else {\r\n            // --- BROWSER ---\r\n            return new Promise((resolve, reject) => {\r\n                try {\r\n                    const canvas = document.createElement('canvas');\r\n                    JsBarcode(canvas, xml.NFe.infNFe[\"@Id\"], {\r\n                        format: 'CODE128',\r\n                        displayValue: false,\r\n                        fontSize: 18,\r\n                    });\r\n\r\n\r\n                    PDF.barCode = canvas.toDataURL('image/png')\r\n                    resolve(PDF.barCode);\r\n                } catch (err) {\r\n                    reject(err);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async function bloco2(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addRet(page, 0, PDF.mtBlock + 10, PDF.width * 0.603, 20);\r\n        addRet(page, PDF.width * 0.603, PDF.mtBlock + 10, PDF.width * 0.222, 20);\r\n        addRet(page, PDF.width * 0.825, PDF.mtBlock + 10, PDF.width * 0.2, 20);\r\n        addRet(page, PDF.width * 0.665, PDF.mtBlock + 30, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.825, PDF.mtBlock + 50, PDF.width * 0.2, 20);\r\n        addRet(page, PDF.width * 0.665, PDF.mtBlock + 30, PDF.width * 0.16, 40);\r\n        addRet(page, PDF.width * 0.503, PDF.mtBlock + 50, PDF.width * 0.162, 20);\r\n        addRet(page, PDF.width * 0.465, PDF.mtBlock + 50, PDF.width * 0.038, 20);\r\n        addRet(page, PDF.width * 0, PDF.mtBlock + 50, PDF.width * 0.465, 20);\r\n        addRet(page, PDF.width * 0, PDF.mtBlock + 30, PDF.width * 0.465, 20);\r\n\r\n        addTXT({ page, text: \"DESTINATÁRIO / REMETENTE\", x: 3, y: PDF.mtBlock + 2, maxWidth: PDF.width * 0.4, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"NOME / RAZÃO SOCIAL\", x: 3, y: PDF.mtBlock + 10, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.xNome, x: 3, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.58, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CNPJ/CPF\", x: PDF.width * 0.61, y: PDF.mtBlock + 10, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: embCNPJCPF(xml.NFe.infNFe.dest?.CNPJ || xml.NFe.infNFe.dest?.CPF || \"\"), x: PDF.width * 0.51, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.42, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"DATA DA EMISSÃO\", x: PDF.width * 0.83, y: PDF.mtBlock + 10, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: new Date(xml.NFe.infNFe.ide.dhEmi).toLocaleDateString('pt-BR'), x: PDF.width * 0.83, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.42, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"ENDEREÇO\", x: 2, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: `${xml.NFe.infNFe.dest.enderDest.xLgr}, N° ${xml.NFe.infNFe.dest.enderDest.nro}`, x: 3, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.42, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"BAIRRO/DISTRITO\", x: PDF.width * 0.47, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest?.xBairro || \"\", x: PDF.width * 0.47, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.21, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CEP\", x: PDF.width * 0.67, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: (xml.NFe.infNFe?.dest?.enderDest?.CEP || \"\").replace(/^(\\d{5})(\\d{3})$/, \"$1-$2\"), x: PDF.width * 0.67, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"DATA DA SAÍDA/ENTRDA\", x: PDF.width * 0.83, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: new Date(xml.NFe.infNFe.ide.dhEmi).toLocaleDateString('pt-BR'), x: PDF.width * 0.83, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"MUNICIPIO\", x: 2, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest?.enderDest?.xMun || \"\", x: 3, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.42, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"UF\", x: PDF.width * 0.47, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest?.UF || \"\", x: PDF.width * 0.473, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.21, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"FONE/FAX\", x: PDF.width * 0.505, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest?.fone || \"\", x: PDF.width * 0.505, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL\", x: PDF.width * 0.67, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.IE || \"\", x: PDF.width * 0.67, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"HORA DA SAÍDA/ENTRDA\", x: PDF.width * 0.83, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: new Date(xml.NFe.infNFe.ide.dhEmi).toLocaleTimeString('pt-BR'), x: PDF.width * 0.83, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        PDF.mtBlock += 72;\r\n    }\r\n\r\n    async function bloco3(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addTXT({ page, text: \"PAGAMENTOS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width * 0.25, fontStyle: \"negrito\" });\r\n\r\n        const pagamentos = Array.isArray(xml.NFe.infNFe.pag.detPag) ? xml.NFe.infNFe.pag.detPag : [xml.NFe.infNFe.pag.detPag];\r\n        const formaPagto: any = {\r\n            \"01\": \"Dinheiro\", \"02\": \"Cheque\", \"03\": \"Cartão de Crédito\", \"04\": \"Cartão de Débito\", \"05\": \"Crédito Loja\",\r\n            \"10\": \"Vale Alimentação\", \"11\": \"Vale Refeição\", \"12\": \"Vale Presente\", \"13\": \"Vale Combustível\",\r\n            \"15\": \"Boleto Bancário\", \"16\": \"Depósito Bancário\", \"17\": \"PIX\", \"18\": \"Transferência\", \"19\": \"Fidelidade\",\r\n            \"90\": \"Sem pagamento\", \"99\": \"Outros\"\r\n        };\r\n\r\n        let IndexX = 0, contL = 0;\r\n\r\n        for (const pag of pagamentos) {\r\n            const forma = formaPagto[pag.tPag] || `Código ${pag.tPag}`;\r\n            const valor = parseFloat(pag.vPag).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n\r\n            addRet(page, PDF.width * IndexX, PDF.mtBlock + 8 + (contL * 22), PDF.width * 0.25, 20);\r\n            addTXT({ page, text: \"FORMA\", x: (PDF.width * IndexX) + 3, y: PDF.mtBlock + 9 + (contL * 22), maxWidth: PDF.width * 0.25 });\r\n            addTXT({ page, text: forma, x: (PDF.width * IndexX) + 3, y: PDF.mtBlock + 19 + (contL * 22), maxWidth: PDF.width * 0.25 });\r\n            addTXT({ page, text: forma, x: (PDF.width * IndexX) + 3, y: PDF.mtBlock + 9 + (contL * 22), maxWidth: PDF.width * 0.245, align: \"right\", fontStyle: \"negrito\" });\r\n            addTXT({ page, text: valor, x: (PDF.width * IndexX) + 3, y: PDF.mtBlock + 19 + (contL * 22), maxWidth: PDF.width * 0.245, align: \"right\", fontStyle: \"negrito\" });\r\n\r\n            if ((IndexX + 0.25) >= 1) {\r\n                IndexX = 0.25\r\n                contL++;\r\n            } else {\r\n                IndexX += 0.25;\r\n            }\r\n\r\n        }\r\n\r\n        PDF.mtBlock += ((contL + 1) * 22) + 6; //+1 pq a linha inicial\r\n    }\r\n\r\n\r\n    async function bloco4(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        const ICMS: any = {\r\n            vBC: \"Base Calc. ICMS\",\r\n            vICMS: \"Valor ICMS\",\r\n            vICMSDeson: \"ICMS Desonerado\",\r\n            vBCST: \"Base Calc. ICMS ST\",\r\n            vST: \"ICMS Subst. Trib.\",\r\n            vFCPST: \"Valor FCP ST\",\r\n            vFCPSTRet: \"FCP Retido ST\",\r\n            vProd: \"Valor Produtos\",\r\n            vFrete: \"Valor Frete\",\r\n            vSeg: \"Valor Seguro\",\r\n            vDesc: \"Valor Desconto\",\r\n            vII: \"Valor Imp. Import.\",\r\n            vIPI: \"Valor IPI\",\r\n            vIPIDevol: \"IPI Devolvido\",\r\n            vPIS: \"Valor PIS\",\r\n            vCOFINS: \"Valor COFINS\",\r\n            vOutro: \"Outras Desp. Acess.\",\r\n            vNF: \"Valor Total NF-e\"\r\n        };\r\n\r\n        addTXT({ page, text: \"TOTAIS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width * 0.25, fontStyle: \"negrito\" });\r\n\r\n        let nextY = PDF.mtBlock + 8, nextX = 0, limitY = (PDF.width - 8);\r\n\r\n        for (const key of Object.keys(ICMS)) {\r\n            const valor = xml.NFe.infNFe.total.ICMSTot[key];\r\n            const texto = valor ? parseFloat(valor).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }) : \"0,00\";\r\n\r\n            await addRet(page, (limitY * 0.111) * nextX, nextY, limitY * 0.111, 20);\r\n            addTXT({ page, text: ICMS[key], x: 2 + (limitY * 0.111) * nextX, y: nextY + 1, maxWidth: limitY * 0.111 });\r\n            addTXT({ page, size: 10, text: texto.replace(\"R$\", \"\"), x: (limitY * 0.111) * nextX, y: nextY + 9, maxWidth: limitY * 0.111, align: \"right\", fontStyle: \"negrito\" });\r\n\r\n            nextX++;\r\n            if (nextX >= 9) {\r\n                nextX = 0;\r\n                nextY += 20;\r\n            }\r\n        }\r\n\r\n        PDF.mtBlock += nextY - PDF.mtBlock + 3;\r\n    }\r\n\r\n\r\n    async function bloco5(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        const transp = xml.NFe.infNFe.transp || {};\r\n        const vol = Array.isArray(transp.vol) ? transp.vol[0] : (transp.vol || {});\r\n\r\n        const modFreteMap: any = {\r\n            \"0\": \"0-Emitente\",\r\n            \"1\": \"1-Destinatário\",\r\n            \"2\": \"2-Terceiros\",\r\n            \"3\": \"3-Próprio por conta do remetente\",\r\n            \"4\": \"4-Próprio por conta do destinatário\",\r\n            \"9\": \"9-Sem Transporte\"\r\n        };\r\n\r\n        addTXT({ page, text: \"TRANSPORTADOR / VOLUMES TRANSPORTADOS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width, fontStyle: \"negrito\" });\r\n\r\n        // Linhas de retângulo (não alteradas)\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width * 0.29, 20);\r\n        addRet(page, PDF.width * 0.29, PDF.mtBlock + 8, PDF.width * 0.15, 20);\r\n        addRet(page, PDF.width * 0.44, PDF.mtBlock + 8, PDF.width * 0.14, 20);\r\n        addRet(page, PDF.width * 0.58, PDF.mtBlock + 8, PDF.width * 0.15, 20);\r\n        addRet(page, PDF.width * 0.73, PDF.mtBlock + 8, PDF.width * 0.04, 20);\r\n        addRet(page, PDF.width * 0.77, PDF.mtBlock + 8, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.77, PDF.mtBlock + 28, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.8, PDF.mtBlock + 48, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.6, PDF.mtBlock + 48, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.44, PDF.mtBlock + 48, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.27, PDF.mtBlock + 48, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.1, PDF.mtBlock + 48, PDF.width, 20);\r\n        addRet(page, 0, PDF.mtBlock + 48, PDF.width, 20);\r\n        addRet(page, 0, PDF.mtBlock + 28, PDF.width * 0.44, 20);\r\n        addRet(page, 0, PDF.mtBlock + 28, PDF.width * 0.73, 20);\r\n\r\n        // Linha 1\r\n        addTXT({ page, text: \"NOME / RAZÃO SOCIAL\", x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: transp.transporta?.xNome || \"\", x: 3, y: PDF.mtBlock + 18, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"FRETE\", x: PDF.width * 0.293, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.15 });\r\n        addTXT({ page, text: modFreteMap[transp.modFrete] || `Código ${transp.modFrete || \"\"}`, x: PDF.width * 0.293, y: PDF.mtBlock + 18, maxWidth: PDF.width * 0.15, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CÓDIGO ANTT\", x: PDF.width * 0.443, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.15 });\r\n        addTXT({ page, text: transp.veicTransp?.RNTC || \"\", x: PDF.width * 0.443, y: PDF.mtBlock + 18, maxWidth: PDF.width * 0.15, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"PLACA DO VEÍCULO\", x: PDF.width * 0.583, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.15 });\r\n        addTXT({ page, text: transp.veicTransp?.placa || \"\", x: PDF.width * 0.583, y: PDF.mtBlock + 18, maxWidth: PDF.width * 0.15, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"UF\", x: PDF.width * 0.733, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.15 });\r\n        addTXT({ page, text: transp.veicTransp?.UF || \"\", x: PDF.width * 0.733, y: PDF.mtBlock + 18, maxWidth: PDF.width * 0.15, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CNPJ/CPF\", x: PDF.width * 0.773, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.15 });\r\n        addTXT({ page, text: embCNPJCPF(transp.transporta?.CNPJ || transp.transporta?.CPF || \"\"), x: PDF.width * 0.773, y: PDF.mtBlock + 18, maxWidth: PDF.width * 0.15, fontStyle: \"negrito\" });\r\n\r\n        // Linha 2\r\n        addTXT({ page, text: \"ENDEREÇO\", x: 3, y: PDF.mtBlock + 29, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: transp.transporta?.xEnder || \"\", x: 3, y: PDF.mtBlock + 39, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"MUNICÍPIO\", x: PDF.width * 0.443, y: PDF.mtBlock + 29, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: transp.transporta?.xMun || \"\", x: PDF.width * 0.443, y: PDF.mtBlock + 39, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"UF\", x: PDF.width * 0.733, y: PDF.mtBlock + 29, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: transp.transporta?.UF || \"\", x: PDF.width * 0.733, y: PDF.mtBlock + 39, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL\", x: PDF.width * 0.773, y: PDF.mtBlock + 29, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: transp.transporta?.IE || \"\", x: PDF.width * 0.773, y: PDF.mtBlock + 39, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        // Linha 3\r\n        addTXT({ page, text: \"QUANTIDADE\", x: 3, y: PDF.mtBlock + 49, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: vol.qVol || \"\", x: 3, y: PDF.mtBlock + 59, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"ESPÉCIE\", x: PDF.width * 0.102, y: PDF.mtBlock + 49, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: vol.esp || \"\", x: PDF.width * 0.102, y: PDF.mtBlock + 59, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"MARCA\", x: PDF.width * 0.273, y: PDF.mtBlock + 49, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: vol.marca || \"\", x: PDF.width * 0.273, y: PDF.mtBlock + 59, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"NUMERAÇÃO\", x: PDF.width * 0.443, y: PDF.mtBlock + 49, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: vol.nVol || \"\", x: PDF.width * 0.443, y: PDF.mtBlock + 59, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"PESO BRUTO\", x: PDF.width * 0.603, y: PDF.mtBlock + 49, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: vol.pesoB || \"\", x: PDF.width * 0.603, y: PDF.mtBlock + 59, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"PESO LÍQUIDO\", x: PDF.width * 0.803, y: PDF.mtBlock + 49, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, text: vol.pesoL || \"\", x: PDF.width * 0.803, y: PDF.mtBlock + 59, maxWidth: PDF.width * 0.29, fontStyle: \"negrito\" });\r\n\r\n        PDF.mtBlock += 70;\r\n    }\r\n\r\n\r\n    async function bloco6(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        xml.NFe.infNFe.det = Array.isArray(xml.NFe.infNFe.det) ? xml.NFe.infNFe.det : [xml.NFe.infNFe.det];\r\n\r\n        addTXT({ page, text: \"DADOS DOS PRODUTOS / SERVIÇOS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width, fontStyle: \"negrito\" });\r\n\r\n        // Cabeçalho da tabela\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width, PDF.pages.length == 1 ? 355 : PDF.height - PDF.mtBlock - 18);\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width, 15);\r\n        const colunas = [0.1, 0.34, 0.403, 0.453, 0.488, 0.525, 0.6, 0.655, 0.712, 0.76, 0.815, 0.875, 0.92, 0.957];\r\n        for (const x of colunas) addLTV(page, PDF.width * x, PDF.mtBlock + 8, PDF.pages.length == 1 ? 355 : PDF.height - PDF.mtBlock - 18);\r\n\r\n        // Títulos\r\n        addTXT({ page, text: \"CÓDIGO PRODUTO\", x: PDF.width * 0.003, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.09, align: \"center\" });\r\n        addTXT({ page, text: \"DESCRIÇÃO DO PRODUTO / SERVIÇO\", x: PDF.width * 0.1, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.24, align: \"center\" });\r\n        addTXT({ page, text: \"NCM/SH\", x: PDF.width * 0.34, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.06, align: \"center\" });\r\n        addTXT({ page, text: \"O/CSOSN\", x: PDF.width * 0.4, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.06, align: \"center\" });\r\n        addTXT({ page, text: \"CFOP\", x: PDF.width * 0.46, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.025, align: \"center\" });\r\n        addTXT({ page, text: \"UN\", x: PDF.width * 0.495, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.025, align: \"center\" });\r\n        addTXT({ page, text: \"QUANT.\", x: PDF.width * 0.525, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR UNIT\", x: PDF.width * 0.592, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR TOTAL\", x: PDF.width * 0.65, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR DESC\", x: PDF.width * 0.7, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"B.CÁLC ICMS\", x: PDF.width * 0.75, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR ICMS\", x: PDF.width * 0.81, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR IPI\", x: PDF.width * 0.862, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"ALÍQ. ICMS\", x: PDF.width * 0.924, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.03, align: \"center\" });\r\n        addTXT({ page, text: \"ALÍQ. IPI\", x: PDF.width * 0.961, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.03, align: \"center\" });\r\n\r\n        // Iterar pelos produtos\r\n        let line = 24,\r\n            lLimite = PDF.pages.length == 1 ? 50 : 97,\r\n            lIndex = 0;\r\n        for (const [iDet, det] of xml.NFe.infNFe.det.entries()) {\r\n            let prod = det.prod;\r\n            prod.xProd = prod.xProd.split(\"\\n\").join(\" \");\r\n            //Descobrir quantas linhas vamos usar.\r\n            lIndex += await addTXT({ page, text: prod.xProd, x: 0, y: 0, maxWidth: PDF.width * 0.237, align: \"center\", cacl: true });\r\n            if (lIndex >= lLimite) {\r\n                xml.NFe.infNFe.det.splice(0, iDet);\r\n                PDF.mtBlock += PDF.pages.length == 1 ? 365 : 50;\r\n                return false;\r\n            }\r\n\r\n            const imposto = det.imposto || {};\r\n            const ICMS = imposto.ICMS?.ICMSSN102 || imposto.ICMS?.ICMS00 || {};\r\n            const IPI = imposto.IPI?.IPITrib || {};\r\n            const fmt = (v: any) => parseFloat(v || \"0.00\").toLocaleString('pt-BR', { minimumFractionDigits: 2 });\r\n\r\n            const xProdH = await addTXT({ page, text: prod.xProd, x: PDF.width * 0.096, y: PDF.mtBlock + line, maxWidth: PDF.width * 0.237, align: \"left\" });\r\n            const y = PDF.mtBlock + line + ((xProdH-1) * 2.7);\r\n\r\n            addTXT({ page, text: prod.cProd, x: 0, y, maxWidth: PDF.width * 0.1, align: \"center\" });\r\n            addTXT({ page, text: prod.NCM, x: PDF.width * 0.34, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: ICMS.CSOSN || ICMS.CST || \"\", x: PDF.width * 0.398, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: prod.CFOP, x: PDF.width * 0.44, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: prod.uCom, x: PDF.width * 0.476, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.qCom), x: PDF.width * 0.533, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vUnCom), x: PDF.width * 0.597, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vProd), x: PDF.width * 0.655, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vDesc), x: PDF.width * 0.705, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vBC), x: PDF.width * 0.756, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vICMS), x: PDF.width * 0.816, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vIPI), x: PDF.width * 0.868, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(ICMS.pICMS), x: PDF.width * 0.908, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(IPI.pIPI), x: PDF.width * 0.954, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            line += xProdH * 6.9;\r\n        }\r\n        PDF.mtBlock += 365;\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    async function bloco7(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addTXT({ page, text: \"DADOS ADICIONAIS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width, fontStyle: \"negrito\" });\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width, 40);\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width * 0.65, 40);\r\n\r\n        addTXT({ page, text: \"INFORMAÇÕES COMPLEMENTARES\", x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.5, align: \"left\", fontStyle: \"negrito\" });\r\n        addTXT({ page, text: \"RESERVADO AO FISCO\", x: PDF.width * 0.652, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.5, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        if (await addTXT({ page, text: xml.NFe.infNFe.infAdic?.infCpl || \"\", x: 3, y: PDF.mtBlock + 14, maxWidth: PDF.width * 0.65, align: \"left\", cacl: true }) >= 5) {\r\n            addTXT({ page, text: xml.NFe.infNFe.infAdic?.infCpl.slice(0, 600) || \"\", x: 3, y: PDF.mtBlock + 14, maxWidth: PDF.width * 0.65, align: \"left\" })\r\n        } else {\r\n            addTXT({ page, text: xml.NFe.infNFe.infAdic?.infCpl || \"\", x: 3, y: PDF.mtBlock + 14, maxWidth: PDF.width * 0.65, align: \"left\" })\r\n        };\r\n\r\n        PDF.mtBlock += 40;\r\n    }\r\n\r\n    async function bloco8(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        const agora = new Date();\r\n        const dataFormatada = agora.toLocaleDateString('pt-BR');\r\n        const horaFormatada = agora.toLocaleTimeString('pt-BR');\r\n        const textoEsquerda = `Impresso em ${dataFormatada} às ${horaFormatada}. ${xml.NFe.infNFe?.infRespTec?.xContato || \"\"}`;\r\n\r\n        addTXT({ page, text: textoEsquerda, x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width, align: \"left\" });\r\n        addTXT({ page, text: \"Powered by @node-sped-pdf\", x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.985, align: \"right\", fontStyle: \"italic\" });\r\n    }\r\n\r\n\r\n    async function addIMG({\r\n        page,\r\n        img,\r\n        x,\r\n        y,\r\n        h,\r\n        w,\r\n    }: {\r\n        page: any;\r\n        img: string;\r\n        x: number;\r\n        y: number;\r\n        h: number;\r\n        w: number;\r\n    }) {\r\n        if (typeof img != undefined) {\r\n            if (img.includes('http') || img.includes(\"wwww\"))\r\n                img = await fetch(img || \"\").then(response => response.blob()).then(blob => blob2base64(blob));\r\n\r\n            const bytes = Uint8Array.from(atob(img.split(',')[1]), c => c.charCodeAt(0));\r\n\r\n            // Detecta o tipo (png ou jpg?)\r\n            const isPng = img?.startsWith('data:image/png');\r\n\r\n            // Embed imagem\r\n            const image = isPng\r\n                ? await PDF.doc.embedPng(bytes)\r\n                : await PDF.doc.embedJpg(bytes);\r\n\r\n            await page.drawImage(image, {\r\n                x: x,\r\n                y: PDF.height - y - h, // Corrige porque pdf-lib desenha do canto inferior da imagem\r\n                width: w,\r\n                height: h,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    async function blob2base64(blobOrBuffer: any): Promise<any> {\r\n        const isBrowser = typeof window !== 'undefined' && typeof window.FileReader !== 'undefined';\r\n        if (isBrowser) {\r\n            // Navegador\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(blobOrBuffer);\r\n                reader.onloadend = () => resolve(reader.result);\r\n                reader.onerror = reject;\r\n            });\r\n        } else {\r\n            // Node.js\r\n            try {\r\n                let buffer;\r\n\r\n                if (blobOrBuffer instanceof Blob) {\r\n                    const arrayBuffer = await blobOrBuffer.arrayBuffer();\r\n                    buffer = Buffer.from(arrayBuffer);\r\n                } else if (Buffer.isBuffer(blobOrBuffer)) {\r\n                    buffer = blobOrBuffer;\r\n                } else {\r\n                    buffer = Buffer.from(blobOrBuffer);\r\n                }\r\n                return buffer.toString('base64');\r\n            } catch (err) {\r\n                throw new Error(`Falha ao converter: ${err}`);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async function blocoDEMO(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        imgDemo = await fetch(imgDemo || \"\").then(response => response.blob()).then(blob => blob2base64(blob));\r\n\r\n        // Decodifica Base64 e embeleza no PDF\r\n        const base64Data = imgDemo?.split(',')[1] as \"\"; // tira \"data:image/png;base64,\" se tiver\r\n        const bytes = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0));\r\n\r\n        // Detecta o tipo (png ou jpg?)\r\n        const isPng = imgDemo?.startsWith('data:image/png');\r\n\r\n        // Embed imagem\r\n        const image = isPng\r\n            ? await PDF.doc.embedPng(bytes)\r\n            : await PDF.doc.embedJpg(bytes);\r\n\r\n        page.drawImage(image, {\r\n            x: 0,\r\n            y: 0, // Corrige porque pdf-lib desenha do canto inferior da imagem\r\n            width: PDF.width,\r\n            height: PDF.height,\r\n        });\r\n    }\r\n\r\n    // --------------------- FIM blocos ------------------------\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        await gerarBlocos();\r\n        resolve(await PDF.doc.save());\r\n    });\r\n}\r\n\r\nexport { DANFe }","import { PDFDocument, StandardFonts, rgb, PDFFont } from \"pdf-lib\"\nimport { XMLParser } from \"fast-xml-parser\"\nimport qrcode from 'qrcode';\n\n\n\n\nconst DANFCe = async (data: { xml?: string, xmlRes?: Record<string, any> | null, logo?: any | null, imgDemo?: string | null, extras?: Array<string> } = {}) => {\n    const parser = new XMLParser({\n        ignoreAttributes: false,\n        attributeNamePrefix: \"@\",\n        parseTagValue: false,       // Evita conversão automática de valores\n    });\n\n    var PDF: {\n        doc: any;\n        pages: any;\n        width: number;\n        height: number;\n        mtBlock: number;\n        barCode: string | null;\n    } = {\n        doc: await PDFDocument.create(),\n        pages: [],\n        width: 0,\n        height: 0,\n        mtBlock: 0,\n        barCode: null\n    }, isBrowser = typeof window !== 'undefined',\n        xml = parser.parse(data.xml || \"\"),\n        xmlRes = data.xmlRes,\n        logo = data.logo,\n        imgDemo = data.imgDemo,\n        extras = data.extras || [];\n\n\n    //Configuração do PDF\n    PDF.pages.push(PDF.doc.addPage([230,\n        await bloco0(null) +\n        await bloco1(null) +\n        await bloco2(null) +\n        await bloco3(null) +\n        await bloco4(null)\n    ]));\n    PDF.width = (PDF.pages[0]).getWidth();\n    PDF.height = (PDF.pages[0]).getHeight();\n\n    // ------------------------   FUNÇOES ------------------------------\n\n    async function addRet(page: any, x: number, y: number, w: number, h: number) {\n        page.drawRectangle({\n            x: x + 4,\n            y: (PDF.height - h) - (y + 4),\n            width: (x + w + 8) >= PDF.width ? (PDF.width - x) - 8 : w,\n            height: h,\n            borderColor: rgb(0, 0, 0),\n            borderWidth: 1\n        });\n    }\n\n    //Linha trajada horizontal\n    async function addLTH(page: any, x: number, y: number, h: number) {\n        const startX = Math.max(x, 4);\n        const endX = Math.min(x + h, PDF.width - 4);\n        const fixedY = PDF.height - y - 4;\n\n        page.drawLine({\n            start: { x: startX, y: fixedY },\n            end: { x: endX, y: fixedY },\n            color: rgb(0, 0, 0),\n            thickness: 1,\n            dashArray: [5, 3],\n        });\n    }\n\n    //Linha trajada vertical\n    async function addLTV(page: any, x: number, y: number, w: number) {\n        const fixedX = Math.max(4, Math.min(x, PDF.width - 4));\n        const startY = Math.max(PDF.height - y - 4, 4);\n        const endY = Math.max(PDF.height - (y + w) - 4, 4);\n\n        page.drawLine({\n            start: { x: fixedX, y: startY },\n            end: { x: fixedX, y: endY },\n            color: rgb(0, 0, 0),\n            thickness: 1,\n            dashArray: [5, 3],\n        });\n    }\n\n    async function addTXT({\n        page,\n        text,\n        x,\n        y,\n        maxWidth,\n        fontStyle = 'normal',\n        size = 7,\n        lineHeight,\n        align = 'left',\n        cacl = false\n    }: {\n        page: any;\n        text: string;\n        x: number;\n        y: number;\n        maxWidth: number;\n        fontStyle?: 'normal' | 'negrito' | 'italic';\n        size?: number;\n        lineHeight?: number;\n        align?: 'left' | 'center' | 'right';\n        cacl?: boolean;\n    }): Promise<number> {\n        let font: PDFFont;\n\n        switch (fontStyle) {\n            case 'negrito':\n                font = await PDF.doc.embedFont(StandardFonts.TimesRomanBold);\n                break;\n            case 'italic':\n                font = await PDF.doc.embedFont(StandardFonts.TimesRomanItalic);\n                break;\n            default:\n                font = await PDF.doc.embedFont(StandardFonts.TimesRoman);\n        }\n\n        // Garante que maxWidth não ultrapasse a largura da página\n        if (maxWidth + x > PDF.width) maxWidth = PDF.width - x - 2;\n\n        // Define altura da linha baseada no tamanho da fonte, se não especificada\n        const effectiveLineHeight = lineHeight ?? size * .9;\n\n        const lines = wrapText(text, maxWidth, font, size);\n        if (cacl) return lines.length;\n\n        lines.forEach((line, index) => {\n            const textWidth = font.widthOfTextAtSize(line, size);\n            let drawX = x + 4;\n\n            if (align === 'center') {\n                drawX = x + (maxWidth - textWidth) / 2;\n            } else if (align === 'right') {\n                drawX = x + maxWidth - textWidth;\n            }\n\n            page.drawText(line, {\n                x: drawX,\n                y: ((PDF.height - effectiveLineHeight) - (y + 4)) - index * effectiveLineHeight,\n                size,\n                font,\n            });\n        });\n        return lines.length;\n    }\n\n\n    function wrapText(text: string, maxWidth: number, font: PDFFont, fontSize: number): string[] {\n        const words = text.split(' ');\n        const lines: string[] = [];\n        let line = '';\n\n        for (let i = 0; i < words.length; i++) {\n            const word = words[i];\n            const testLine = line + word + ' ';\n            const testWidth = font.widthOfTextAtSize(testLine, fontSize);\n\n            if (testWidth > maxWidth && line !== '') {\n                lines.push(line.trim());\n                line = word + ' ';\n            } else {\n                line = testLine;\n            }\n        }\n        if (line.trim() !== '') {\n            lines.push(line.trim());\n        }\n        return lines;\n    }\n\n    // ----------------- FIM FUNÇÕES -----------------------\n\n\n\n    // --------------------- blocos ------------------------\\\n\n    async function gerarBlocos() {\n        await bloco0()\n        await bloco1()\n        await bloco2()\n        await bloco3();\n        await bloco4();\n    }\n\n\n\n    async function bloco0(page = PDF.pages[(PDF.pages.length - 1)]) {\n        if (!page) return 74;\n\n        let me = 0;\n\n        if (typeof logo !== \"undefined\") {\n            await addIMG({ page, img: logo, x: 3, y: PDF.mtBlock + 3, h: 60, w: 60 });\n            me += 62;\n        }\n\n        const emit = xml?.NFe?.infNFe?.emit || {};\n        const enderEmit = emit.enderEmit || {};\n\n        let line = await addTXT({\n            page,\n            text: `${emit.xNome || \"Emitente desconhecido\"}`,\n            x: 1 + me,\n            y: PDF.mtBlock + 5,\n            maxWidth: PDF.width,\n            align: \"center\",\n            fontStyle: \"negrito\"\n        });\n\n        PDF.mtBlock = (line - 1) * 2.7 + 10;\n\n        await addTXT({\n            page,\n            text: `CNPJ: ${emit.CNPJ || \"N/D\"} - I.E.: ${emit.IE || \"N/D\"}`,\n            x: 1 + me,\n            y: PDF.mtBlock + 5,\n            maxWidth: PDF.width,\n            align: \"center\"\n        });\n\n        await addTXT({\n            page,\n            text: `${enderEmit.xLgr || \"Logradouro desconhecido\"}, N°${enderEmit.nro || \"S/N\"}`,\n            x: 0 + me,\n            y: PDF.mtBlock + 13,\n            maxWidth: PDF.width,\n            align: \"center\"\n        });\n\n        await addTXT({\n            page,\n            text: `${enderEmit.xBairro || \"Bairro N/D\"} - ${enderEmit.CEP || \"CEP N/D\"}`,\n            x: 0 + me,\n            y: PDF.mtBlock + 20,\n            maxWidth: PDF.width,\n            align: \"center\"\n        });\n\n        await addTXT({\n            page,\n            text: `${enderEmit.xMun || \"Cidade N/D\"} - ${enderEmit.UF || \"UF\"} Fone: ${enderEmit.fone || \"N/D\"}`,\n            x: 0 + me,\n            y: PDF.mtBlock + 27,\n            maxWidth: PDF.width,\n            align: \"center\"\n        });\n\n        addLTH(page, 0, PDF.mtBlock + 55, PDF.width);\n\n        await addTXT({\n            page,\n            text: `DOCUMENTO AUXILIAR DA NOTA FISCAL DE CONSUMIDOR ELETRÔNICA`,\n            x: 0,\n            y: PDF.mtBlock + 57,\n            maxWidth: PDF.width,\n            align: \"center\",\n            fontStyle: \"negrito\"\n        });\n\n        addLTH(page, 0, PDF.mtBlock + 72, PDF.width);\n\n        PDF.mtBlock += 74;\n        return 1;\n    }\n\n\n    async function bloco1(page = PDF.pages[(PDF.pages.length - 1)]) {\n        const produtos = Array.isArray(xml?.NFe?.infNFe?.det)\n            ? xml.NFe.infNFe.det\n            : xml?.NFe?.infNFe?.det\n                ? [xml.NFe.infNFe.det]\n                : [];\n\n        if (page == null) {\n            let lIndex = 0;\n            for (const det of produtos) {\n                const prod = det?.prod || {};\n                const text = prod.xProd || \"\";\n                const wrappedLines = wrapText(\n                    text,\n                    230 * 0.42,\n                    await PDF.doc.embedFont(StandardFonts.TimesRoman),\n                    7\n                );\n                lIndex += wrappedLines.length;\n            }\n            return 24 + lIndex * 10;\n        } else {\n            let line = 7,\n                lIndex = 0;\n\n            addTXT({ page, text: `CODIGO | DESCRIÇÃO`, x: PDF.width * 0.00, y: PDF.mtBlock, maxWidth: PDF.width * 0.5, align: \"left\" });\n            //addTXT({ page, text: `DESCRICAO`, x: PDF.width * 0.17, y: PDF.mtBlock, maxWidth: PDF.width * 0.2, align: \"center\" });\n            addTXT({ page, text: `QTDE | UN | VL. UNIT | VL. TOTAL`, x: 0, y: PDF.mtBlock, maxWidth: PDF.width * 0.98, align: \"right\" });\n\n            for (const det of produtos) {\n                const prod = det?.prod || {};\n                const fmt = (v: any) =>\n                    parseFloat(v || \"0.00\").toLocaleString(\"pt-BR\", {\n                        minimumFractionDigits: 2,\n                    });\n\n                const xProd = `${prod.cProd} | ${prod.xProd}`;\n                const xProdH = await addTXT({\n                    page,\n                    text: xProd,\n                    x: 0,\n                    y: PDF.mtBlock + line,\n                    maxWidth: PDF.width * 0.5,\n                    align: \"left\",\n                });\n\n                const y = PDF.mtBlock + line + (xProdH - 1) * 2.7;\n\n                addTXT({\n                    page,\n                    text: `${fmt(prod.qCom)} | ${prod.uCom || \"UN\"} | ${fmt(prod.vUnCom)} | ${fmt(prod.vProd)}`,\n                    x: 0,\n                    y,\n                    maxWidth: PDF.width * 0.98,\n                    align: \"right\",\n                });\n\n                line += xProdH * 6.9;\n                lIndex += xProdH;\n            }\n\n            addLTH(page, 0, 7 + PDF.mtBlock + lIndex * 10, PDF.width);\n            PDF.mtBlock += 8 + lIndex * 10;\n            return 1;\n        }\n    }\n\n\n    async function bloco2(page = PDF.pages[(PDF.pages.length - 1)]) {\n        if (!page) {\n            const pag = xml?.NFe?.infNFe?.pag || {};\n            const detPag = Array.isArray(pag.detPag) ? pag.detPag : [pag.detPag];\n            return 40 + (detPag.length * 7)\n        };\n\n        const total = xml?.NFe?.infNFe?.total?.ICMSTot || {};\n        const pag = xml?.NFe?.infNFe?.pag || {};\n        const detPag = Array.isArray(pag.detPag) ? pag.detPag : [pag.detPag];\n        const vTroco = parseFloat(pag.vTroco || \"0.00\");\n\n        const qtdItens = Array.isArray(xml?.NFe?.infNFe?.det)\n            ? xml.NFe.infNFe.det.length\n            : xml?.NFe?.infNFe?.det ? 1 : 0;\n\n        const fmt = (v: any) =>\n            parseFloat(v || \"0.00\").toLocaleString(\"pt-BR\", { minimumFractionDigits: 2 });\n\n        await addTXT({ page, text: `Qtde. Total de Itens`, x: 0, y: PDF.mtBlock, maxWidth: PDF.width, align: \"left\" });\n        await addTXT({ page, text: `${qtdItens}`, x: 0, y: PDF.mtBlock, maxWidth: PDF.width - 3, align: \"right\" });\n\n        await addTXT({ page, text: `Valor Total R$`, x: 0, y: PDF.mtBlock + 7, maxWidth: PDF.width, align: \"left\" });\n        await addTXT({ page, text: `${fmt(total.vProd)}`, x: 0, y: PDF.mtBlock + 7, maxWidth: PDF.width - 3, align: \"right\" });\n\n        await addTXT({ page, text: `Valor a Pagar R$`, x: 0, y: PDF.mtBlock + 14, maxWidth: PDF.width, align: \"left\" });\n        await addTXT({ page, text: `${fmt(total.vNF)}`, x: 0, y: PDF.mtBlock + 14, maxWidth: PDF.width - 3, align: \"right\" });\n\n        await addTXT({ page, text: `FORMAS PAGAMENTOS`, x: 0, y: PDF.mtBlock + 21, maxWidth: PDF.width, align: \"left\", fontStyle: \"negrito\" });\n        await addTXT({ page, text: `VALOR PAGO`, x: 0, y: PDF.mtBlock + 21, maxWidth: PDF.width - 3, align: \"right\", fontStyle: \"negrito\" });\n\n        let linhaY = PDF.mtBlock + 28;\n        const tPagMap: any = {\n            \"01\": \"Dinheiro\",\n            \"02\": \"Cheque\",\n            \"03\": \"Cartão de Crédito\",\n            \"04\": \"Cartão de Débito\",\n            \"05\": \"Crédito Loja\",\n            \"10\": \"Vale Alimentação\",\n            \"11\": \"Vale Refeição\",\n            \"12\": \"Vale Presente\",\n            \"13\": \"Vale Combustível\",\n            \"15\": \"Boleto Bancário\",\n            \"16\": \"Depósito Bancário\",\n            \"17\": \"Pagamento Instantâneo (PIX)\",\n            \"18\": \"Transferência bancária, Carteira Digital\",\n            \"19\": \"Programa de fidelidade\",\n            \"90\": \"Sem pagamento\",\n            \"99\": \"Outros\"\n        };\n        for (const pagItem of detPag) {\n            if (!pagItem) continue;\n\n            const forma = tPagMap[pagItem.tPag] || \"Forma desconhecida\";\n            const valor = fmt(pagItem.vPag);\n\n            await addTXT({ page, text: forma.toUpperCase(), x: 0, y: linhaY, maxWidth: PDF.width, align: \"left\" });\n            await addTXT({ page, text: valor, x: 0, y: linhaY, maxWidth: PDF.width - 3, align: \"right\" });\n\n            linhaY += 7;\n        }\n\n        await addTXT({ page, text: `TROCO`, x: 0, y: linhaY, maxWidth: PDF.width, align: \"left\" });\n        await addTXT({ page, text: `${fmt(vTroco)}`, x: 0, y: linhaY, maxWidth: PDF.width - 3, align: \"right\" });\n\n        addLTH(page, 0, linhaY + 8, PDF.width);\n        PDF.mtBlock = linhaY + 9;\n\n        return 1;\n    }\n\n\n    async function bloco3(page = PDF.pages[(PDF.pages.length - 1)]) {\n        if (!page) {\n            let marg = 0;\n            const dest = xml?.NFe?.infNFe.dest || {};\n            if (Object.keys(dest).length > 0) { //Tem destinatario?\n                marg += 7;\n                if (typeof dest.enderDest != null) {\n                    marg += 7;\n                }\n            }\n            return 195 + marg;\n        };\n\n        const infNFe = xml?.NFe?.infNFe || {};\n        const supl = xml?.NFe?.infNFeSupl || {};\n        const ide = infNFe.ide || {};\n        const dest = infNFe.dest || {};\n        const dhEmi = ide.dhEmi ? new Date(ide.dhEmi) : new Date();\n        const dataFormatada = dhEmi.toLocaleDateString(\"pt-BR\");\n        const horaFormatada = dhEmi.toLocaleTimeString(\"pt-BR\");\n\n        const chave = infNFe[\"@Id\"]?.replace(\"NFe\", \"\") || \"00000000000000000000000000000000000000000000\";\n        const chaveFormatada = chave.replace(/(\\d{4})(?=\\d)/g, \"$1 \").trim();\n\n        const protocolo = infNFe.procEmi === \"0\" ? \"Protocolo não informado\" : \"Protocolo de Autorização 000000000000000\";\n        const dataAut = `Data de Autorização ${dataFormatada} ${horaFormatada}`;\n        const serie = ide.serie || \"0\";\n        const nNF = ide.nNF || \"0\";\n\n        const cpf = dest?.CPF ? `CPF: ${dest.CPF}` : \"NÃO INFORMADO\";\n        const nomeDest = dest?.xNome || null;\n        const enderDest = dest?.enderDest || null;\n        const endereco = enderDest ? `${enderDest.xLgr || \"\"}, ${enderDest.nro || \"S/N\"}, ${enderDest.xBairro || \"\"}, ${enderDest.xMun || \"\"}`.toUpperCase() : null;\n\n        const qrCode = supl.qrCode || 'http://www.sefaz.mt.gov.br/nfce/consultanfce';\n\n        // Texto\n        await addTXT({ page, text: `Consulte pela Chave de Acesso em`, x: 0, y: PDF.mtBlock, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\n        await addTXT({ page, text: `www.sefaz.mt.gov.br/nfce/consulta`, x: 0, y: PDF.mtBlock + 7, maxWidth: PDF.width, align: \"center\" });\n        await addTXT({ page, text: chaveFormatada, x: 0, y: PDF.mtBlock + 14, maxWidth: PDF.width, align: \"center\" });\n\n        await addTXT({ page, text: `CONSUMIDOR - ${cpf}`, x: 0, y: PDF.mtBlock + 21, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\n        PDF.mtBlock += 21;\n\n        if (nomeDest) {\n            await addTXT({ page, text: nomeDest, x: 0, y: PDF.mtBlock + 28, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\n            PDF.mtBlock += 7;\n        }\n        if (endereco) {\n            await addTXT({ page, text: endereco, x: 0, y: PDF.mtBlock + 7, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\n            PDF.mtBlock += 7;\n        }\n\n\n        await addTXT({\n            page,\n            text: `NFC-e n. ${nNF} Serie ${serie} Hs ${dataFormatada} ${horaFormatada}`,\n            x: 0,\n            y: PDF.mtBlock + 7,\n            maxWidth: PDF.width,\n            align: \"center\",\n            fontStyle: \"negrito\"\n        });\n\n\n        // QR Code\n        const qrCodeDataURL = await qrcode.toDataURL(qrCode);\n        await addIMG({\n            page,\n            img: qrCodeDataURL,\n            x: (PDF.width / 2) - 75,\n            y: PDF.mtBlock + 25,\n            w: 150,\n            h: 150\n        });\n\n        await addTXT({ page, text: protocolo, x: 0, y: PDF.mtBlock + 14, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\n        await addTXT({ page, text: dataAut, x: 0, y: PDF.mtBlock + 21, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\" });\n\n\n\n        // Tributos (valor fictício neste exemplo, pode ser extraído se disponível)\n        await addTXT({\n            page,\n            text: `Tributos Totais incidentes (Lei Federal 12.741/2012) - Total R$ 0,00 0,00% - Federal 0,00% - Estadual 0,00% - Municipal 0,00%`,\n            x: 0,\n            y: PDF.mtBlock + 161,\n            maxWidth: PDF.width - 3,\n            align: \"center\"\n        });\n\n        PDF.mtBlock += 169;\n        return 1;\n    }\n\n\n\n    //Bloco de informações extras\n    async function bloco4(page = PDF.pages[(PDF.pages.length - 1)]) {\n        if (page == null) {\n            let marg = 0;\n            if (typeof extras != \"undefined\") {\n                marg = extras?.length / 2\n                marg = Math.round(marg)\n            }\n            return marg * 7;\n        } else {\n            addLTH(page, 0, 7 + PDF.mtBlock, PDF.width);\n            return 1;\n        }\n    }\n\n    async function addIMG({\n        page,\n        img,\n        x,\n        y,\n        h,\n        w,\n    }: {\n        page: any;\n        img: string;\n        x: number;\n        y: number;\n        h: number;\n        w: number;\n    }) {\n        if (typeof img != undefined) {\n            if (img.includes('http') || img.includes(\"wwww\"))\n                img = await fetch(img || \"\").then(response => response.blob()).then(blob => blob2base64(blob));\n\n            const bytes = Uint8Array.from(atob(img.split(',')[1]), c => c.charCodeAt(0));\n\n            // Detecta o tipo (png ou jpg?)\n            const isPng = img?.startsWith('data:image/png');\n\n            // Embed imagem\n            const image = isPng\n                ? await PDF.doc.embedPng(bytes)\n                : await PDF.doc.embedJpg(bytes);\n\n            await page.drawImage(image, {\n                x: x,\n                y: PDF.height - y - h, // Corrige porque pdf-lib desenha do canto inferior da imagem\n                width: w,\n                height: h,\n            });\n        }\n    }\n\n    function blob2base64(blobOrBuffer: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            // Detecta se está no navegador\n            const isBrowser = typeof window !== 'undefined' && typeof window.FileReader !== 'undefined';\n\n            if (isBrowser) {\n                const reader = new FileReader();\n                reader.readAsDataURL(blobOrBuffer);\n                reader.onloadend = () => resolve(reader.result);\n                reader.onerror = (err) => reject(err);\n            } else {\n                // Node.js (espera Buffer ou Uint8Array)\n                try {\n                    const buffer = Buffer.isBuffer(blobOrBuffer)\n                        ? blobOrBuffer\n                        : Buffer.from(blobOrBuffer);\n                    const base64 = `data:application/octet-stream;base64,${buffer.toString('base64')}`;\n                    resolve(base64);\n                } catch (err) {\n                    reject(err);\n                }\n            }\n        });\n    }\n\n\n    async function blocoDEMO(page = PDF.pages[(PDF.pages.length - 1)]) {\n        imgDemo = await fetch(imgDemo || \"\").then(response => response.blob()).then(blob => blob2base64(blob));\n\n        // Decodifica Base64 e embeleza no PDF\n        const base64Data = imgDemo?.split(',')[1] as \"\"; // tira \"data:image/png;base64,\" se tiver\n        const bytes = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0));\n\n        // Detecta o tipo (png ou jpg?)\n        const isPng = imgDemo?.startsWith('data:image/png');\n\n        // Embed imagem\n        const image = isPng\n            ? await PDF.doc.embedPng(bytes)\n            : await PDF.doc.embedJpg(bytes);\n\n        page.drawImage(image, {\n            x: 0,\n            y: 0, // Corrige porque pdf-lib desenha do canto inferior da imagem\n            width: PDF.width,\n            height: PDF.height,\n        });\n    }\n\n    // --------------------- FIM blocos ------------------------\n\n    return new Promise(async (resolve, reject) => {\n        await gerarBlocos();\n        resolve(await PDF.doc.save());\n    });\n}\n\nexport { DANFCe }","import { PDFDocument, StandardFonts, rgb, PDFFont } from \"pdf-lib\"\r\nimport { XMLParser } from \"fast-xml-parser\"\r\nimport JsBarcode from \"jsbarcode\"\r\nimport canvas from \"canvas\"\r\n\r\ninterface XmlData {\r\n    [key: string]: any; // permite outras tags sem erro\r\n}\r\n\r\nconst DAV55 = async (data: { xml: XmlData, logo?: any | null, imgDemo?: string | null, orcamento?: boolean } = { xml: {} as XmlData }) => {\r\n    const parser = new XMLParser({\r\n        ignoreAttributes: false,\r\n        attributeNamePrefix: \"@\",\r\n        parseTagValue: false,       // Evita conversão automática de valores\r\n    });\r\n\r\n    var PDF: {\r\n        doc: any;\r\n        pages: any;\r\n        width: number;\r\n        height: number;\r\n        mtBlock: number;\r\n        barCode: string | null;\r\n    } = {\r\n        doc: await PDFDocument.create(),\r\n        pages: [],\r\n        width: 0,\r\n        height: 0,\r\n        mtBlock: 0,\r\n        barCode: null\r\n    }, isBrowser = typeof window !== 'undefined',\r\n        xml = data.xml,\r\n        logo = data.logo,\r\n        imgDemo = data.imgDemo,\r\n        orcamento = data.orcamento || false;\r\n\r\n    //Configuração do PDF\r\n    PDF.pages.push(PDF.doc.addPage());\r\n    PDF.width = (PDF.pages[0]).getWidth();\r\n    PDF.height = (PDF.pages[0]).getHeight();\r\n\r\n    // ------------------------   FUNÇOES ------------------------------\r\n\r\n    async function addRet(page: any, x: number, y: number, w: number, h: number) {\r\n        page.drawRectangle({\r\n            x: x + 4,\r\n            y: (PDF.height - h) - (y + 4),\r\n            width: (x + w + 8) >= PDF.width ? (PDF.width - x) - 8 : w,\r\n            height: h,\r\n            borderColor: rgb(0, 0, 0),\r\n            borderWidth: 1\r\n        });\r\n    }\r\n\r\n    //Linha trajada horizontal\r\n    async function addLTH(page: any, x: number, y: number, h: number) {\r\n        const startX = Math.max(x, 4);\r\n        const endX = Math.min(x + h, PDF.width - 4);\r\n        const fixedY = PDF.height - y - 4;\r\n\r\n        page.drawLine({\r\n            start: { x: startX, y: fixedY },\r\n            end: { x: endX, y: fixedY },\r\n            color: rgb(0, 0, 0),\r\n            thickness: 1,\r\n            dashArray: [5, 3],\r\n        });\r\n    }\r\n\r\n    //Linha trajada vertical\r\n    async function addLTV(page: any, x: number, y: number, w: number) {\r\n        const fixedX = Math.max(4, Math.min(x, PDF.width - 4));\r\n        const startY = Math.max(PDF.height - y - 4, 4);\r\n        const endY = Math.max(PDF.height - (y + w) - 4, 4);\r\n\r\n        page.drawLine({\r\n            start: { x: fixedX, y: startY },\r\n            end: { x: fixedX, y: endY },\r\n            color: rgb(0, 0, 0),\r\n            thickness: 1,\r\n            dashArray: [5, 3],\r\n        });\r\n    }\r\n\r\n    async function addTXT({\r\n        page,\r\n        text,\r\n        x,\r\n        y,\r\n        maxWidth,\r\n        fontStyle = 'normal',\r\n        size = 7,\r\n        lineHeight,\r\n        align = 'left',\r\n        cacl = false,\r\n        opacity = 1\r\n    }: {\r\n        page: any;\r\n        text: string;\r\n        x: number;\r\n        y: number;\r\n        opacity?: number;\r\n        maxWidth: number;\r\n        fontStyle?: 'normal' | 'negrito' | 'italic';\r\n        size?: number;\r\n        lineHeight?: number;\r\n        align?: 'left' | 'center' | 'right';\r\n        cacl?: boolean;\r\n    }): Promise<number> {\r\n        let font: PDFFont;\r\n\r\n        switch (fontStyle) {\r\n            case 'negrito':\r\n                font = await PDF.doc.embedFont(StandardFonts.TimesRomanBold);\r\n                break;\r\n            case 'italic':\r\n                font = await PDF.doc.embedFont(StandardFonts.TimesRomanItalic);\r\n                break;\r\n            default:\r\n                font = await PDF.doc.embedFont(StandardFonts.TimesRoman);\r\n        }\r\n\r\n        // Garante que maxWidth não ultrapasse a largura da página\r\n        if (maxWidth + x > PDF.width) maxWidth = PDF.width - x - 2;\r\n\r\n        // Define altura da linha baseada no tamanho da fonte, se não especificada\r\n        const effectiveLineHeight = lineHeight ?? size * .9;\r\n\r\n        const lines = wrapText(`${text}`, maxWidth, font, size);\r\n        if (cacl) return lines.length;\r\n\r\n        lines.forEach((line, index) => {\r\n            const textWidth = font.widthOfTextAtSize(line, size);\r\n            let drawX = x + 4;\r\n\r\n            if (align === 'center') {\r\n                drawX = x + (maxWidth - textWidth) / 2;\r\n            } else if (align === 'right') {\r\n                drawX = x + maxWidth - textWidth;\r\n            }\r\n\r\n            page.drawText(line, {\r\n                x: drawX,\r\n                y: ((PDF.height - effectiveLineHeight) - (y + 4)) - index * effectiveLineHeight,\r\n                size,\r\n                font,\r\n                opacity: opacity || 1\r\n            });\r\n        });\r\n        return lines.length;\r\n    }\r\n\r\n\r\n    function wrapText(text: string, maxWidth: number, font: PDFFont, fontSize: number): string[] {\r\n        const words = text.split(' ');\r\n        const lines: string[] = [];\r\n        let line = '';\r\n\r\n        for (let i = 0; i < words.length; i++) {\r\n            const word = words[i];\r\n            const testLine = line + word + ' ';\r\n            const testWidth = font.widthOfTextAtSize(testLine, fontSize);\r\n\r\n            if (testWidth > maxWidth && line !== '') {\r\n                lines.push(line.trim());\r\n                line = word + ' ';\r\n            } else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        if (line.trim() !== '') {\r\n            lines.push(line.trim());\r\n        }\r\n        return lines;\r\n    }\r\n\r\n\r\n    function embCNPJCPF(valor: string) {\r\n        // Remove tudo que não for número\r\n        const numeros = (valor || \"\").replace(/\\D/g, '');\r\n\r\n        if (numeros.length === 11) {\r\n            // Formata CPF: 000.000.000-00\r\n            return numeros.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\r\n        } else if (numeros.length === 14) {\r\n            // Formata CNPJ: 00.000.000/0000-00\r\n            return numeros.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\r\n        } else {\r\n            return valor;\r\n        }\r\n    }\r\n\r\n    // ----------------- FIM FUNÇÕES -----------------------\r\n\r\n\r\n\r\n    // --------------------- blocos ------------------------\\\r\n\r\n    async function gerarBlocos() {\r\n        //await bloco0()\r\n        await bloco1()\r\n        //await bloco2()\r\n        if (xml.tagDetPag.length > 0)\r\n            await bloco3();\r\n        await bloco4()\r\n        //await bloco5()\r\n        let fim = await bloco6()\r\n        await bloco7()\r\n        await bloco8()\r\n\r\n        while (!fim) {\r\n            PDF.mtBlock = 0; //Resetar\r\n            PDF.pages.push(PDF.doc.addPage());\r\n            await bloco1()\r\n            fim = await bloco6();\r\n        }\r\n\r\n        for (const [i, page] of PDF.pages.entries()) {\r\n            addTXT({ page, size: 8, text: `Folha ${i + 1}/${PDF.pages.length}`, x: 235, y: 80, maxWidth: PDF.width * 0.19, align: \"center\", fontStyle: \"italic\" });\r\n            if (orcamento)\r\n                addTXT({ page, size: 60, text: `ORÇAMENTO`, x: 0, y: PDF.height * 0.60, maxWidth: PDF.width, align: \"center\", fontStyle: \"negrito\", opacity: 0.3 });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async function bloco1(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addRet(page, 0, PDF.mtBlock, PDF.width, 132);\r\n        addRet(page, 0, PDF.mtBlock, PDF.width, 92);\r\n        addRet(page, 0, PDF.mtBlock, PDF.width, 112);\r\n        addRet(page, PDF.width * 0.401, PDF.mtBlock + 0, PDF.width, 92);\r\n        addRet(page, PDF.width * 0.53, PDF.mtBlock + 38, 16, 20);\r\n        addRet(page, PDF.width * 0.57, PDF.mtBlock + 0, PDF.width, 92);\r\n        //addRet(page, PDF.width * 0.57, PDF.mtBlock + 47, PDF.width, 23);\r\n        //addRet(page, PDF.width * 0.57, PDF.mtBlock + 70, PDF.width, 22);\r\n        addRet(page, PDF.width * 0.57, PDF.mtBlock + 92, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.745, PDF.mtBlock + 112, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.497, PDF.mtBlock + 112, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.25, PDF.mtBlock + 112, PDF.width, 20);\r\n\r\n        addTXT({ page, text: \"IDENTIFICAÇÃO DO EMITENTE\", x: 0, y: PDF.mtBlock + 2, maxWidth: PDF.width * 0.4, align: \"center\" });\r\n        addTXT({ page, text: \"IDENTIFICAÇÃO DO DESTINATARIO\", x: PDF.width * 0.6, y: PDF.mtBlock + 2, maxWidth: PDF.width * 0.4, align: \"center\" });\r\n\r\n        let mt = 0;\r\n        if (typeof logo !== \"undefined\") {\r\n            await addIMG({ page, img: logo, x: PDF.width * 0.18, y: PDF.mtBlock + 14, h: 37, w: 37 });\r\n            mt += 12;\r\n        }\r\n\r\n        //Redimencionar nome.\r\n        let sizeNome = 12;\r\n        while (await addTXT({ page, size: sizeNome, text: `${xml.tagEmit?.xNome}`, x: 1, y: PDF.mtBlock + 35 + mt, maxWidth: PDF.width * 0.4, align: \"center\", fontStyle: \"negrito\", cacl: true }) >= 2) {\r\n            sizeNome--;\r\n        }\r\n        addTXT({ page, size: sizeNome, text: `${xml.tagEmit?.xNome}`, x: 1, y: PDF.mtBlock + 35 + mt, maxWidth: PDF.width * 0.4, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n\r\n        addTXT({ page, size: 9, text: `CNPJ/CPF ${embCNPJCPF(xml.tagEmit?.CPF || xml.tagEmit?.CNPJ)}`, x: 0, y: PDF.mtBlock + 46 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n        addTXT({ page, size: 9, text: `${xml.tagEmit?.xBairro || \"\"} - ${xml.tagEmit?.CEP || \"\"}, ${xml.tagEmit?.xLgr || \"\"}, N°${xml.tagEmit?.nro || \"\"}`, x: 0, y: PDF.mtBlock + 55 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n        addTXT({ page, size: 9, text: `${xml.tagEmit?.xMun || \"\"} - ${xml.tagEmit?.UF || \"\"} Fone: ${xml.tagEmit?.fone || \"\"}`, x: 0, y: PDF.mtBlock + 65 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n\r\n        // ----- Destinatario\r\n        if (xml.tagDest) {\r\n            sizeNome = 12;\r\n            while (await addTXT({ page, size: sizeNome, text: `${xml.tagDest?.xNome}`, x: PDF.width * 0.6, y: PDF.mtBlock + 35 + mt, maxWidth: PDF.width * 0.4, align: \"center\", fontStyle: \"negrito\", cacl: true }) >= 2) {\r\n                sizeNome--;\r\n            }\r\n            addTXT({ page, size: sizeNome, text: `${xml.tagDest?.xNome}`, x: PDF.width * 0.6, y: PDF.mtBlock + 35 + mt, maxWidth: PDF.width * 0.4, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n            addTXT({ page, size: 9, text: `CNPJ/CPF ${embCNPJCPF(xml.tagDest?.CPF || xml.tagDest?.CNPJ)}`, x: PDF.width * 0.6, y: PDF.mtBlock + 46 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n            addTXT({ page, size: 9, text: `${xml.tagDest?.xBairro || \"\"} - ${xml.tagDest?.CEP || \"\"}, ${xml.tagDest?.xLgr || \"\"}, N°${xml.tagDest?.nro || \"\"}`, x: PDF.width * 0.6, y: PDF.mtBlock + 55 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n            addTXT({ page, size: 9, text: `${xml.tagDest?.xMun || \"\"} - ${xml.tagDest?.UF || \"\"} Fone: ${xml.tagDest?.fone || \"\"}`, x: PDF.width * 0.6, y: PDF.mtBlock + 65 + mt, maxWidth: PDF.width * 0.42, align: \"center\" });\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n\r\n        addTXT({ page, size: 16, text: \"CUPOM\", x: PDF.width * 0.393, y: PDF.mtBlock + 3, maxWidth: PDF.width * 0.2, align: \"center\", fontStyle: \"negrito\" });\r\n        addTXT({ page, size: 8, text: \"Documento NÃO Fiscal\", x: PDF.width * 0.4, y: PDF.mtBlock + 19, maxWidth: PDF.width * 0.18, align: \"center\" });\r\n        addTXT({ page, size: 8, text: \"0 - ENTRADA\", x: PDF.width * 0.415, y: PDF.mtBlock + 42, maxWidth: PDF.width * 0.19, align: \"left\" });\r\n        addTXT({ page, size: 8, text: \"1 - SAÍDA\", x: PDF.width * 0.415, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.19, align: \"left\" });\r\n        addTXT({ page, size: 20, text: xml.tagIde.tpNF, x: PDF.width * 0.534, y: PDF.mtBlock + 37, maxWidth: PDF.width * 0.19, align: \"left\" });\r\n        addTXT({ page, size: 10, text: `Codigo º. ${xml.tagIde.nNF.padStart(9, '0')}`, x: PDF.width * 0.4, y: PDF.mtBlock + 63, maxWidth: PDF.width * 0.19, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"NATUREZA DA OPERAÇÃO\", x: 3, y: PDF.mtBlock + 92, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.tagIde.natOp, x: 3, y: PDF.mtBlock + 101, maxWidth: PDF.width * 0.58, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL\", x: 3, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.tagEmit.IE || \"\", x: 3, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.25, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO MUNICIPAL\", x: PDF.width * 0.255, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.tagEmit.IM || \"\", x: PDF.width * 0.355, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.05, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL DO SUBST. TRIBUT.\", x: PDF.width * 0.5, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: xml.tagEmit.IEST || \"\", x: PDF.width * 0.6, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.05, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CNPJ/CPF\", x: PDF.width * 0.75, y: PDF.mtBlock + 112, maxWidth: PDF.width * 0.29 });\r\n        addTXT({ page, size: 10, text: embCNPJCPF(xml.tagEmit.CNPJ || xml.tagEmit.CPF), x: PDF.width * 0.845, y: PDF.mtBlock + 121, maxWidth: PDF.width * 0.05, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        PDF.mtBlock += 133;\r\n    }\r\n\r\n    async function barCode(): Promise<Buffer | string> {\r\n        if (PDF.barCode != null) return PDF.barCode;\r\n        const isNode = typeof window === 'undefined';\r\n        if (isNode) {\r\n            // --- NODE.JS ---\r\n            const { createCanvas } = await import('canvas');\r\n            const canvas = createCanvas(400, 100);\r\n            JsBarcode(canvas, xml.NFe.infNFe[\"@Id\"], {\r\n                format: 'CODE128',\r\n                displayValue: false,\r\n                fontSize: 18,\r\n            });\r\n\r\n            PDF.barCode = canvas.toDataURL('image/png');\r\n            // Retorna base64 (imagem PNG)\r\n            return PDF.barCode;\r\n        } else {\r\n            // --- BROWSER ---\r\n            return new Promise((resolve, reject) => {\r\n                try {\r\n                    const canvas = document.createElement('canvas');\r\n                    JsBarcode(canvas, xml.NFe.infNFe[\"@Id\"], {\r\n                        format: 'CODE128',\r\n                        displayValue: false,\r\n                        fontSize: 18,\r\n                    });\r\n\r\n\r\n                    PDF.barCode = canvas.toDataURL('image/png')\r\n                    resolve(PDF.barCode);\r\n                } catch (err) {\r\n                    reject(err);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async function bloco2(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addRet(page, 0, PDF.mtBlock + 10, PDF.width * 0.603, 20);\r\n        addRet(page, PDF.width * 0.603, PDF.mtBlock + 10, PDF.width * 0.222, 20);\r\n        addRet(page, PDF.width * 0.825, PDF.mtBlock + 10, PDF.width * 0.2, 20);\r\n        addRet(page, PDF.width * 0.665, PDF.mtBlock + 30, PDF.width, 20);\r\n        addRet(page, PDF.width * 0.825, PDF.mtBlock + 50, PDF.width * 0.2, 20);\r\n        addRet(page, PDF.width * 0.665, PDF.mtBlock + 30, PDF.width * 0.16, 40);\r\n        addRet(page, PDF.width * 0.503, PDF.mtBlock + 50, PDF.width * 0.162, 20);\r\n        addRet(page, PDF.width * 0.465, PDF.mtBlock + 50, PDF.width * 0.038, 20);\r\n        addRet(page, PDF.width * 0, PDF.mtBlock + 50, PDF.width * 0.465, 20);\r\n        addRet(page, PDF.width * 0, PDF.mtBlock + 30, PDF.width * 0.465, 20);\r\n\r\n        addTXT({ page, text: \"DESTINATÁRIO / REMETENTE\", x: 3, y: PDF.mtBlock + 2, maxWidth: PDF.width * 0.4, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"NOME / RAZÃO SOCIAL\", x: 3, y: PDF.mtBlock + 10, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.xNome, x: 3, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.58, fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CNPJ/CPF\", x: PDF.width * 0.61, y: PDF.mtBlock + 10, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.CNPJ || xml.NFe.infNFe.dest.CPF, x: PDF.width * 0.51, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.42, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"DATA DA EMISSÃO\", x: PDF.width * 0.83, y: PDF.mtBlock + 10, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: new Date(xml.tagIde.dhEmi).toLocaleDateString('pt-BR'), x: PDF.width * 0.83, y: PDF.mtBlock + 20, maxWidth: PDF.width * 0.42, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"ENDEREÇO\", x: 2, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: `${xml.NFe.infNFe.dest.enderDest.xLgr}, N° ${xml.NFe.infNFe.dest.enderDest.nro}`, x: 3, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.42, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"BAIRRO/DISTRITO\", x: PDF.width * 0.47, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest.xBairro, x: PDF.width * 0.47, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.21, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"CEP\", x: PDF.width * 0.67, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest.CEP.replace(/^(\\d{5})(\\d{3})$/, \"$1-$2\"), x: PDF.width * 0.67, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"DATA DA SAÍDA/ENTRDA\", x: PDF.width * 0.83, y: PDF.mtBlock + 31, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: new Date(xml.tagIde.dhEmi).toLocaleDateString('pt-BR'), x: PDF.width * 0.83, y: PDF.mtBlock + 40, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"MUNICIPIO\", x: 2, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest.xMun, x: 3, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.42, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"UF\", x: PDF.width * 0.47, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest.UF, x: PDF.width * 0.473, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.21, align: \"left\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"FONE/FAX\", x: PDF.width * 0.505, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.enderDest.fone || \"\", x: PDF.width * 0.505, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"INSCRIÇÃO ESTADUAL\", x: PDF.width * 0.67, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: xml.NFe.infNFe.dest.IE || \"\", x: PDF.width * 0.67, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        addTXT({ page, text: \"HORA DA SAÍDA/ENTRDA\", x: PDF.width * 0.83, y: PDF.mtBlock + 50, maxWidth: PDF.width * 0.4 });\r\n        addTXT({ page, size: 9, text: new Date(xml.tagIde.dhEmi).toLocaleTimeString('pt-BR'), x: PDF.width * 0.83, y: PDF.mtBlock + 60, maxWidth: PDF.width * 0.17, align: \"center\", fontStyle: \"negrito\" });\r\n\r\n        PDF.mtBlock += 73;\r\n    }\r\n\r\n    async function bloco3(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addTXT({ page, text: \"PAGAMENTO\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width * 0.25, fontStyle: \"negrito\" });\r\n\r\n        const pagamentos = Array.isArray(xml.tagDetPag) ? xml.tagDetPag : [xml.tagDetPag];\r\n        const formaPagto: any = {\r\n            \"01\": \"Dinheiro\", \"02\": \"Cheque\", \"03\": \"Cartão de Crédito\", \"04\": \"Cartão de Débito\", \"05\": \"Crédito Loja\",\r\n            \"10\": \"Vale Alimentação\", \"11\": \"Vale Refeição\", \"12\": \"Vale Presente\", \"13\": \"Vale Combustível\",\r\n            \"15\": \"Boleto Bancário\", \"16\": \"Depósito Bancário\", \"17\": \"PIX\", \"18\": \"Transferência\", \"19\": \"Fidelidade\",\r\n            \"90\": \"Sem pagamento\", \"99\": \"Outros\"\r\n        };\r\n\r\n        let offset = 0;\r\n\r\n        for (const pag of pagamentos) {\r\n            const forma = formaPagto[pag.tPag] || `Código ${pag.tPag}`;\r\n            const valor = parseFloat(pag.vPag).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n\r\n            addRet(page, 0, PDF.mtBlock + 7 + offset, PDF.width * 0.25, 20);\r\n            addTXT({ page, text: \"FORMA\", x: 3, y: PDF.mtBlock + 8 + offset, maxWidth: PDF.width * 0.25 });\r\n            addTXT({ page, text: forma, x: 3, y: PDF.mtBlock + 18 + offset, maxWidth: PDF.width * 0.25 });\r\n            addTXT({ page, text: forma, x: 3, y: PDF.mtBlock + 8 + offset, maxWidth: PDF.width * 0.245, align: \"right\", fontStyle: \"negrito\" });\r\n            addTXT({ page, text: valor, x: 3, y: PDF.mtBlock + 18 + offset, maxWidth: PDF.width * 0.245, align: \"right\", fontStyle: \"negrito\" });\r\n\r\n            offset += 22;\r\n        }\r\n\r\n        PDF.mtBlock += offset + 6;\r\n    }\r\n\r\n\r\n    async function bloco4(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        const ICMS: any = {\r\n            vProd: \"Valor Produtos\",\r\n            vFrete: \"Valor Frete\",\r\n            vSeg: \"Valor Seguro\",\r\n            vDesc: \"Valor Desconto\",\r\n            vOutro: \"Outras Desp. Acess.\",\r\n            vNF: \"Valor Total NF-e\"\r\n        };\r\n\r\n        addTXT({ page, text: \"TOTAIS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width * 0.25, fontStyle: \"negrito\" });\r\n\r\n        let nextY = PDF.mtBlock + 8, nextX = 0, limitY = (PDF.width - 8);\r\n\r\n        for (const key of Object.keys(ICMS)) {\r\n            const valor = xml?.vTotal?.[key] || 0;\r\n            const texto = valor ? parseFloat(valor).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }) : \"0,00\";\r\n\r\n            await addRet(page, (limitY * 0.111) * nextX, nextY, limitY * 0.111, 20);\r\n            addTXT({ page, text: ICMS[key], x: 2 + (limitY * 0.111) * nextX, y: nextY + 1, maxWidth: limitY * 0.111 });\r\n            addTXT({ page, size: 10, text: texto.replace(\"R$\", \"\"), x: (limitY * 0.111) * nextX, y: nextY + 9, maxWidth: limitY * 0.111, align: \"right\", fontStyle: \"negrito\" });\r\n\r\n            nextX++;\r\n            if (nextX >= 9) {\r\n                nextX = 0;\r\n                nextY += 20;\r\n            }\r\n        }\r\n        PDF.mtBlock += 30;\r\n    }\r\n\r\n\r\n\r\n    async function bloco6(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        let hBlock = PDF.height - PDF.mtBlock - (PDF.pages.length == 1 ? 75 : 18);\r\n        xml.tagProd = Array.isArray(xml.tagProd) ? xml.tagProd : [xml.tagProd];\r\n        addTXT({ page, text: \"DADOS DOS PRODUTOS / SERVIÇOS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width, fontStyle: \"negrito\" });\r\n\r\n        // Cabeçalho da tabela\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width, hBlock);\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width, 15);\r\n        const colunas = [0.1, 0.49, 0.57, 0.64, 0.7, 0.775, 0.85, 0.925];\r\n        for (const x of colunas) addLTV(page, PDF.width * x, PDF.mtBlock + 8, hBlock);\r\n\r\n        // Títulos\r\n        addTXT({ page, text: \"CÓDIGO PRODUTO\", x: PDF.width * 0.003, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.09, align: \"center\" });\r\n        addTXT({ page, text: \"DESCRIÇÃO DO PRODUTO / SERVIÇO\", x: PDF.width * 0.1, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.24, align: \"center\" });\r\n        addTXT({ page, text: \"NCM/SH\", x: PDF.width * 0.5, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.06, align: \"center\" });\r\n        //addTXT({ page, text: \"O/CSOSN\", x: PDF.width * 0.4, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.06, align: \"center\" });\r\n        addTXT({ page, text: \"CFOP\", x: PDF.width * 0.59, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.025, align: \"center\" });\r\n        addTXT({ page, text: \"UN\", x: PDF.width * 0.66, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.025, align: \"center\" });\r\n        addTXT({ page, text: \"QUANT.\", x: PDF.width * 0.7, y: PDF.mtBlock + 12, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR UNIT\", x: PDF.width * 0.775, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR DESC\", x: PDF.width * 0.85, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n        addTXT({ page, text: \"VALOR TOTAL\", x: PDF.width * 0.925, y: PDF.mtBlock + 8.5, maxWidth: PDF.width * 0.07, align: \"center\" });\r\n\r\n        // Iterar pelos produtos\r\n        let line = 24,\r\n            lLimite = Math.floor(hBlock / 7), //7 tamanho da fonte\r\n            lIndex = 0;\r\n        for (const [iDet, prod] of xml.tagProd.entries()) {\r\n            //Descobrir quantas linhas vamos usar.\r\n            lIndex += await addTXT({ page, text: prod.xProd, x: 0, y: 0, maxWidth: PDF.width * 0.39, align: \"center\", cacl: true });\r\n            if (lIndex >= lLimite) {\r\n                xml.tagProd.splice(0, iDet);\r\n                PDF.mtBlock += hBlock + 12;\r\n                return false;\r\n            }\r\n\r\n\r\n            const fmt = (v: any) => parseFloat(v || \"0.00\").toLocaleString('pt-BR', { minimumFractionDigits: 2 });\r\n\r\n            const xProdH = await addTXT({ page, text: prod.xProd, x: PDF.width * 0.096, y: PDF.mtBlock + line, maxWidth: PDF.width * 0.39, align: \"left\" });\r\n            const y = PDF.mtBlock + line + ((xProdH - 1) * 2.7);\r\n\r\n            addTXT({ page, text: prod.cEAN || \"\", x: 0, y, maxWidth: PDF.width * 0.1, align: \"center\" });\r\n            addTXT({ page, text: prod.NCM || \"\", x: PDF.width * 0.5, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            //addTXT({ page, text: \"\", x: PDF.width * 0.398, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: prod.CFOP || \"\", x: PDF.width * 0.575, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: prod.uCom || \"\", x: PDF.width * 0.64, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.qCom), x: PDF.width * 0.71, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vUnCom), x: PDF.width * 0.783, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vDesc || 0), x: PDF.width * 0.86, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            addTXT({ page, text: fmt(prod.vProd), x: PDF.width * 0.93, y, maxWidth: PDF.width * 0.061, align: \"center\" });\r\n            line += xProdH * 6.9;\r\n        }\r\n        PDF.mtBlock += hBlock + 12;\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    async function bloco7(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        addTXT({ page, text: \"DADOS ADICIONAIS\", x: 3, y: PDF.mtBlock, maxWidth: PDF.width, fontStyle: \"negrito\" });\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width, 40);\r\n        addRet(page, 0, PDF.mtBlock + 8, PDF.width * 0.65, 40);\r\n\r\n        addTXT({ page, text: \"INFORMAÇÕES COMPLEMENTARES\", x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.5, align: \"left\", fontStyle: \"negrito\" });\r\n        addTXT({ page, text: \"RESERVADO AO FISCO\", x: PDF.width * 0.652, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.5, align: \"left\", fontStyle: \"negrito\" });\r\n        PDF.mtBlock += 40;\r\n    }\r\n\r\n    async function bloco8(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        const agora = new Date();\r\n        const dataFormatada = agora.toLocaleDateString('pt-BR');\r\n        const horaFormatada = agora.toLocaleTimeString('pt-BR');\r\n        const textoEsquerda = `Impresso em ${dataFormatada} às ${horaFormatada}  Guara PDV - https://guaradev.com`;\r\n\r\n        addTXT({ page, text: textoEsquerda, x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width, align: \"left\" });\r\n        addTXT({ page, text: \"Powered by @node-sped-pdf\", x: 3, y: PDF.mtBlock + 8, maxWidth: PDF.width * 0.989, align: \"right\", fontStyle: \"italic\" });\r\n    }\r\n\r\n\r\n    async function addIMG({\r\n        page,\r\n        img,\r\n        x,\r\n        y,\r\n        h,\r\n        w,\r\n    }: {\r\n        page: any;\r\n        img: string;\r\n        x: number;\r\n        y: number;\r\n        h: number;\r\n        w: number;\r\n    }) {\r\n        if (typeof img != undefined) {\r\n            if (img.includes('http') || img.includes(\"wwww\"))\r\n                img = await fetch(img || \"\").then(response => response.blob()).then(blob => blob2base64(blob));\r\n\r\n            const bytes = Uint8Array.from(atob(img.split(',')[1]), c => c.charCodeAt(0));\r\n\r\n            // Detecta o tipo (png ou jpg?)\r\n            const isPng = img?.startsWith('data:image/png');\r\n\r\n            // Embed imagem\r\n            const image = isPng\r\n                ? await PDF.doc.embedPng(bytes)\r\n                : await PDF.doc.embedJpg(bytes);\r\n\r\n            await page.drawImage(image, {\r\n                x: x,\r\n                y: PDF.height - y - h, // Corrige porque pdf-lib desenha do canto inferior da imagem\r\n                width: w,\r\n                height: h,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    async function blob2base64(blobOrBuffer: any): Promise<any> {\r\n        const isBrowser = typeof window !== 'undefined' && typeof window.FileReader !== 'undefined';\r\n        if (isBrowser) {\r\n            // Navegador\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(blobOrBuffer);\r\n                reader.onloadend = () => resolve(reader.result);\r\n                reader.onerror = reject;\r\n            });\r\n        } else {\r\n            // Node.js\r\n            try {\r\n                let buffer;\r\n\r\n                if (blobOrBuffer instanceof Blob) {\r\n                    const arrayBuffer = await blobOrBuffer.arrayBuffer();\r\n                    buffer = Buffer.from(arrayBuffer);\r\n                } else if (Buffer.isBuffer(blobOrBuffer)) {\r\n                    buffer = blobOrBuffer;\r\n                } else {\r\n                    buffer = Buffer.from(blobOrBuffer);\r\n                }\r\n                return buffer.toString('base64');\r\n            } catch (err) {\r\n                throw new Error(`Falha ao converter: ${err}`);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async function blocoDEMO(page = PDF.pages[(PDF.pages.length - 1)]) {\r\n        imgDemo = await fetch(imgDemo || \"\").then(response => response.blob()).then(blob => blob2base64(blob));\r\n\r\n        // Decodifica Base64 e embeleza no PDF\r\n        const base64Data = imgDemo?.split(',')[1] as \"\"; // tira \"data:image/png;base64,\" se tiver\r\n        const bytes = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0));\r\n\r\n        // Detecta o tipo (png ou jpg?)\r\n        const isPng = imgDemo?.startsWith('data:image/png');\r\n\r\n        // Embed imagem\r\n        const image = isPng\r\n            ? await PDF.doc.embedPng(bytes)\r\n            : await PDF.doc.embedJpg(bytes);\r\n\r\n        page.drawImage(image, {\r\n            x: 0,\r\n            y: 0, // Corrige porque pdf-lib desenha do canto inferior da imagem\r\n            width: PDF.width,\r\n            height: PDF.height,\r\n        });\r\n    }\r\n\r\n    // --------------------- FIM blocos ------------------------\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        await gerarBlocos();\r\n        resolve(await PDF.doc.save());\r\n    });\r\n}\r\n\r\nexport { DAV55 }"],"mappings":";AAAA,SAAS,aAAa,eAAe,WAAoB;AACzD,SAAS,iBAAiB;AAC1B,OAAO,eAAe;AAKtB,IAAM,QAAQ,OAAO,OAAwF,CAAC,MAAM;AAChH,QAAM,SAAS,IAAI,UAAU;AAAA,IACzB,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,eAAe;AAAA;AAAA,EACnB,CAAC;AAED,MAAI,MAOA;AAAA,IACA,KAAK,MAAM,YAAY,OAAO;AAAA,IAC9B,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,EACb,GAAG,YAAY,OAAO,WAAW,aAC7B,MAAM,OAAO,MAAM,KAAK,OAAO,EAAE,GACjC,WAAW,OAAO,KAAK,YAAY,cAAc,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,GAChF,OAAO,KAAK,MACZ,UAAU,KAAK,SACf,UAAU;AAGd,MAAI,OAAO,UAAU,eAAe,iBAAiB;AACjD,aAAS,cAAc,gBAAgB,MAAM,QAAQ,SAAS,cAAc,aAAa,IAAI,SAAS,cAAc,gBAAgB,CAAC,SAAS,cAAc,aAAa;AAE7K,MAAI,IAAI,SAAS;AACb,UAAM,IAAI;AAAA,EACd;AAGA,MAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,CAAC;AAChC,MAAI,QAAS,IAAI,MAAM,CAAC,EAAG,SAAS;AACpC,MAAI,SAAU,IAAI,MAAM,CAAC,EAAG,UAAU;AAItC,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW,GAAW;AACzE,SAAK,cAAc;AAAA,MACf,GAAG,IAAI;AAAA,MACP,GAAI,IAAI,SAAS,KAAM,IAAI;AAAA,MAC3B,OAAQ,IAAI,IAAI,KAAM,IAAI,QAAS,IAAI,QAAQ,IAAK,IAAI;AAAA,MACxD,QAAQ;AAAA,MACR,aAAa,IAAI,GAAG,GAAG,CAAC;AAAA,MACxB,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AAGA,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW;AAC9D,UAAM,SAAS,KAAK,IAAI,GAAG,CAAC;AAC5B,UAAM,OAAO,KAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC;AAC1C,UAAM,SAAS,IAAI,SAAS,IAAI;AAEhC,SAAK,SAAS;AAAA,MACV,OAAO,EAAE,GAAG,QAAQ,GAAG,OAAO;AAAA,MAC9B,KAAK,EAAE,GAAG,MAAM,GAAG,OAAO;AAAA,MAC1B,OAAO,IAAI,GAAG,GAAG,CAAC;AAAA,MAClB,WAAW;AAAA,MACX,WAAW,CAAC,GAAG,CAAC;AAAA,IACpB,CAAC;AAAA,EACL;AAGA,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW;AAC9D,UAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC;AACrD,UAAM,SAAS,KAAK,IAAI,IAAI,SAAS,IAAI,GAAG,CAAC;AAC7C,UAAM,OAAO,KAAK,IAAI,IAAI,UAAU,IAAI,KAAK,GAAG,CAAC;AAEjD,SAAK,SAAS;AAAA,MACV,OAAO,EAAE,GAAG,QAAQ,GAAG,OAAO;AAAA,MAC9B,KAAK,EAAE,GAAG,QAAQ,GAAG,KAAK;AAAA,MAC1B,OAAO,IAAI,GAAG,GAAG,CAAC;AAAA,MAClB,WAAW;AAAA,MACX,WAAW,CAAC,GAAG,CAAC;AAAA,IACpB,CAAC;AAAA,EACL;AAEA,iBAAe,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,OAAO;AAAA,IACP;AAAA,IACA,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,UAAU;AAAA,EACd,GAYoB;AAChB,QAAI;AAEJ,YAAQ,WAAW;AAAA,MACf,KAAK;AACD,eAAO,MAAM,IAAI,IAAI,UAAU,cAAc,cAAc;AAC3D;AAAA,MACJ,KAAK;AACD,eAAO,MAAM,IAAI,IAAI,UAAU,cAAc,gBAAgB;AAC7D;AAAA,MACJ;AACI,eAAO,MAAM,IAAI,IAAI,UAAU,cAAc,UAAU;AAAA,IAC/D;AAGA,QAAI,WAAW,IAAI,IAAI,MAAO,YAAW,IAAI,QAAQ,IAAI;AAGzD,UAAM,sBAAsB,cAAc,OAAO;AAEjD,UAAM,QAAQ,SAAS,MAAM,UAAU,MAAM,IAAI;AACjD,QAAI,KAAM,QAAO,MAAM;AAEvB,UAAM,QAAQ,CAAC,MAAM,UAAU;AAC3B,YAAM,YAAY,KAAK,kBAAkB,MAAM,IAAI;AACnD,UAAI,QAAQ,IAAI;AAEhB,UAAI,UAAU,UAAU;AACpB,gBAAQ,KAAK,WAAW,aAAa;AAAA,MACzC,WAAW,UAAU,SAAS;AAC1B,gBAAQ,IAAI,WAAW;AAAA,MAC3B;AAEA,WAAK,SAAS,MAAM;AAAA,QAChB,GAAG;AAAA,QACH,GAAK,IAAI,SAAS,uBAAwB,IAAI,KAAM,QAAQ;AAAA,QAC5D;AAAA,QACA;AAAA,QACA,SAAS,WAAW;AAAA,MACxB,CAAC;AAAA,IACL,CAAC;AACD,WAAO,MAAM;AAAA,EACjB;AAGA,WAAS,SAAS,MAAc,UAAkB,MAAe,UAA4B;AACzF,UAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,UAAM,QAAkB,CAAC;AACzB,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,WAAW,OAAO,OAAO;AAC/B,YAAM,YAAY,KAAK,kBAAkB,UAAU,QAAQ;AAE3D,UAAI,YAAY,YAAY,SAAS,IAAI;AACrC,cAAM,KAAK,KAAK,KAAK,CAAC;AACtB,eAAO,OAAO;AAAA,MAClB,OAAO;AACH,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,KAAK,KAAK,MAAM,IAAI;AACpB,YAAM,KAAK,KAAK,KAAK,CAAC;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AAEA,WAAS,WAAW,OAAe;AAE/B,UAAM,UAAU,MAAM,QAAQ,OAAO,EAAE;AAEvC,QAAI,QAAQ,WAAW,IAAI;AAEvB,aAAO,QAAQ,QAAQ,gCAAgC,aAAa;AAAA,IACxE,WAAW,QAAQ,WAAW,IAAI;AAE9B,aAAO,QAAQ,QAAQ,uCAAuC,gBAAgB;AAAA,IAClF,OAAO;AACH,aAAO;AAAA,IACX;AAAA,EACJ;AAQA,iBAAe,cAAc;AACzB,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AACb,QAAI,MAAM,MAAM,OAAO;AACvB,UAAM,OAAO;AACb,UAAM,OAAO;AAEb,WAAO,CAAC,KAAK;AACT,UAAI,UAAU;AACd,UAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,CAAC;AAChC,YAAM,OAAO;AACb,YAAM,MAAM,OAAO;AAAA,IACvB;AAEA,eAAW,CAAC,GAAG,IAAI,KAAK,IAAI,MAAM,QAAQ,GAAG;AACzC,aAAO,EAAE,MAAM,MAAM,GAAG,MAAM,SAAS,IAAI,CAAC,IAAI,IAAI,MAAM,MAAM,IAAI,GAAG,KAAK,GAAI,KAAK,IAAI,MAAM,IAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,SAAS,CAAC;AAEtK,UAAI,IAAI,IAAI,OAAO,IAAI,SAAS,KAAK;AACjC,eAAO,EAAE,MAAM,MAAM,IAAI,MAAM,qDAA+C,GAAG,GAAG,GAAG,IAAI,SAAS,KAAK,UAAU,IAAI,OAAO,OAAO,UAAU,SAAS,KAAK,WAAW,UAAU,CAAC;AAAA,MACvL;AAEA,UAAI,OAAO,UAAU,eAAe,iBAAiB,aAAa;AAC9D,mBAAW,SAAS,SAAS,cAAc,eAAe;AACtD,cAAI,MAAM,UAAU,UAAU,YAAY,UAAU;AAChD,mBAAO,EAAE,MAAM,MAAM,IAAI,MAAM,aAAa,GAAG,GAAG,GAAG,IAAI,SAAS,KAAM,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AAAA,UACxI;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAIA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9C,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,KAAK,EAAE;AACpD,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,KAAK,EAAE;AACpD,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,KAAK,EAAE;AACrD,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,QAAQ,MAAM,EAAE;AAErE,WAAO,EAAE,MAAM,MAAM,gBAAgB,IAAI,IAAI,OAAO,KAAK,KAAK,sGAA6F,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,mBAAmB,OAAO,CAAC,iBAAiB,WAAW,IAAI,IAAI,OAAO,MAAM,QAAQ,GAAG,EAAE,eAAe,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC,CAAC,kFAA+E,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,KAAK,IAAI,IAAI,OAAO,KAAK,UAAU,GAAG,IAAI,IAAI,IAAI,OAAO,KAAK,UAAU,OAAO,IAAI,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,IAAI,IAAI,IAAI,OAAO,KAAK,UAAU,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC1pB,WAAO,EAAE,MAAM,MAAM,uBAAuB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACnG,WAAO,EAAE,MAAM,MAAM,2BAA2B,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,MAAM,CAAC;AAChH,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AAC5I,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,UAAO,IAAI,IAAI,OAAO,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AAC5L,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,YAAS,IAAI,IAAI,OAAO,IAAI,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AAEhM,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,KAAK;AAC3C,QAAI,WAAW;AAAA,EACnB;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,MAAM,GAAG,IAAI,SAAS,IAAI,OAAO,GAAG;AAC3C,WAAO,MAAM,GAAG,IAAI,SAAS,IAAI,OAAO,EAAE;AAC1C,WAAO,MAAM,GAAG,IAAI,SAAS,IAAI,OAAO,GAAG;AAC3C,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,EAAE;AACvD,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC7D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,KAAK,IAAI,OAAO,EAAE;AAChE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,KAAK,IAAI,OAAO,EAAE;AAChE,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,KAAK,IAAI,OAAO,EAAE;AAE/D,WAAO,EAAE,MAAM,MAAM,mCAA6B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,SAAS,CAAC;AAExH,QAAI,KAAK;AACT,QAAI,OAAO,SAAS,aAAa;AAC7B,YAAM,OAAO,EAAE,MAAM,KAAK,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AACxF,YAAM;AAAA,IACV;AAGA,QAAI,WAAW;AACf,WAAO,MAAM,OAAO,EAAE,MAAM,MAAM,UAAU,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,WAAW,MAAM,KAAK,CAAC,KAAK,GAAG;AACpM;AAAA,IACJ;AAEA,WAAO,EAAE,MAAM,MAAM,UAAU,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AACvK,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,UAAO,IAAI,IAAI,OAAO,KAAK,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5L,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,UAAU,OAAO,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC9L,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,EAAE,UAAU,IAAI,IAAI,OAAO,KAAK,WAAW,QAAQ,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAE7O,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,SAAS,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AACpJ,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,mDAAgD,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AACpK,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,eAAe,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AACnI,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,gBAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AACjI,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,IAAI,OAAO,IAAI,MAAM,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AAC9I,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,UAAO,IAAI,IAAI,OAAO,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAC7L,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,YAAS,IAAI,IAAI,OAAO,IAAI,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEnM,UAAM,OAAO,EAAE,MAAM,KAAK,MAAM,QAAQ,GAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,GAAG,CAAC;AAE3H,WAAO,EAAE,MAAM,MAAM,mBAAmB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC/G,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,EAAE,QAAQ,OAAO,EAAE,EAAE,QAAQ,kBAAkB,KAAK,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AACvN,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,wDAAwD,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC9K,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,mEAAmE,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAEzL,YAAQ,IAAI,IAAI,SAAS,SAAS,KAAK;AACvC,WAAO,EAAE,MAAM,MAAM,yCAAmC,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC/H,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,GAAG,IAAI,SAAS,SAAS,SAAS,EAAE,MAAM,IAAI,SAAS,SAAS,WAAW,IAAI,KAAK,IAAI,QAAQ,QAAQ,QAAQ,EAAE,eAAe,OAAO,IAAI,EAAE,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEhS,WAAO,EAAE,MAAM,MAAM,8BAAwB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACpG,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,IAAI,OAAO,IAAI,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAExJ,WAAO,EAAE,MAAM,MAAM,4BAAsB,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACnG,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,IAAI,OAAO,KAAK,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE5J,WAAO,EAAE,MAAM,MAAM,6BAAuB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACpH,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,IAAI,OAAO,KAAK,MAAM,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE5K,WAAO,EAAE,MAAM,MAAM,8CAAwC,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACnI,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,IAAI,OAAO,KAAK,QAAQ,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE5K,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACxG,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,WAAW,IAAI,IAAI,OAAO,MAAM,QAAQ,IAAI,IAAI,OAAO,MAAM,OAAO,EAAE,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEvN,QAAI,WAAW;AAAA,EACnB;AAEA,iBAAe,UAAoC;AAC/C,QAAI,IAAI,WAAW,KAAM,QAAO,IAAI;AACpC,UAAM,SAAS,OAAO,WAAW;AACjC,QAAI,QAAQ;AAER,YAAM,EAAE,aAAa,IAAI,MAAM,OAAO,QAAQ;AAC9C,YAAM,SAAS,aAAa,KAAK,GAAG;AACpC,gBAAU,QAAQ,IAAI,IAAI,OAAO,KAAK,GAAG;AAAA,QACrC,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,UAAU;AAAA,MACd,CAAC;AAED,UAAI,UAAU,OAAO,UAAU,WAAW;AAE1C,aAAO,IAAI;AAAA,IACf,OAAO;AAEH,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,YAAI;AACA,gBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,oBAAU,QAAQ,IAAI,IAAI,OAAO,KAAK,GAAG;AAAA,YACrC,QAAQ;AAAA,YACR,cAAc;AAAA,YACd,UAAU;AAAA,UACd,CAAC;AAGD,cAAI,UAAU,OAAO,UAAU,WAAW;AAC1C,kBAAQ,IAAI,OAAO;AAAA,QACvB,SAAS,KAAK;AACV,iBAAO,GAAG;AAAA,QACd;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvD,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,KAAK,EAAE;AACrE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC/D,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,KAAK,EAAE;AACrE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,MAAM,EAAE;AACtE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvE,WAAO,MAAM,IAAI,QAAQ,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACnE,WAAO,MAAM,IAAI,QAAQ,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AAEnE,WAAO,EAAE,MAAM,MAAM,+BAA4B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,WAAW,UAAU,CAAC;AAE5H,WAAO,EAAE,MAAM,MAAM,0BAAuB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAClG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEtI,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACtG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,WAAW,IAAI,IAAI,OAAO,MAAM,QAAQ,IAAI,IAAI,OAAO,MAAM,OAAO,EAAE,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEpN,WAAO,EAAE,MAAM,MAAM,sBAAmB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAC7G,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,mBAAmB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE3M,WAAO,EAAE,MAAM,MAAM,eAAY,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACvF,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,WAAQ,IAAI,IAAI,OAAO,KAAK,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,WAAW,UAAU,CAAC;AAE5M,WAAO,EAAE,MAAM,MAAM,mBAAmB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAC7G,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,WAAW,WAAW,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEzL,WAAO,EAAE,MAAM,MAAM,OAAO,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACjG,WAAO,EAAE,MAAM,MAAM,GAAG,OAAO,IAAI,IAAI,QAAQ,MAAM,WAAW,OAAO,IAAI,QAAQ,oBAAoB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE9N,WAAO,EAAE,MAAM,MAAM,2BAAwB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAClH,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,mBAAmB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE3M,WAAO,EAAE,MAAM,MAAM,aAAa,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACxF,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,MAAM,WAAW,QAAQ,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,WAAW,UAAU,CAAC;AAEtK,WAAO,EAAE,MAAM,MAAM,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAChG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,WAAW,MAAM,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,WAAW,UAAU,CAAC;AAEnL,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACvG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,WAAW,QAAQ,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEvL,WAAO,EAAE,MAAM,MAAM,4BAAsB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAChH,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,MAAM,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEzK,WAAO,EAAE,MAAM,MAAM,2BAAwB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAClH,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,mBAAmB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE3M,QAAI,WAAW;AAAA,EACnB;AAEA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAE3G,UAAM,aAAa,MAAM,QAAQ,IAAI,IAAI,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI,OAAO,IAAI,SAAS,CAAC,IAAI,IAAI,OAAO,IAAI,MAAM;AACpH,UAAM,aAAkB;AAAA,MACpB,MAAM;AAAA,MAAY,MAAM;AAAA,MAAU,MAAM;AAAA,MAAqB,MAAM;AAAA,MAAoB,MAAM;AAAA,MAC7F,MAAM;AAAA,MAAoB,MAAM;AAAA,MAAiB,MAAM;AAAA,MAAiB,MAAM;AAAA,MAC9E,MAAM;AAAA,MAAmB,MAAM;AAAA,MAAqB,MAAM;AAAA,MAAO,MAAM;AAAA,MAAiB,MAAM;AAAA,MAC9F,MAAM;AAAA,MAAiB,MAAM;AAAA,IACjC;AAEA,QAAI,SAAS,GAAG,QAAQ;AAExB,eAAW,OAAO,YAAY;AAC1B,YAAM,QAAQ,WAAW,IAAI,IAAI,KAAK,aAAU,IAAI,IAAI;AACxD,YAAM,QAAQ,WAAW,IAAI,IAAI,EAAE,eAAe,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC;AAEjG,aAAO,MAAM,IAAI,QAAQ,QAAQ,IAAI,UAAU,IAAK,QAAQ,IAAK,IAAI,QAAQ,MAAM,EAAE;AACrF,aAAO,EAAE,MAAM,MAAM,SAAS,GAAI,IAAI,QAAQ,SAAU,GAAG,GAAG,IAAI,UAAU,IAAK,QAAQ,IAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC1H,aAAO,EAAE,MAAM,MAAM,OAAO,GAAI,IAAI,QAAQ,SAAU,GAAG,GAAG,IAAI,UAAU,KAAM,QAAQ,IAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACzH,aAAO,EAAE,MAAM,MAAM,OAAO,GAAI,IAAI,QAAQ,SAAU,GAAG,GAAG,IAAI,UAAU,IAAK,QAAQ,IAAK,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,WAAW,UAAU,CAAC;AAC/J,aAAO,EAAE,MAAM,MAAM,OAAO,GAAI,IAAI,QAAQ,SAAU,GAAG,GAAG,IAAI,UAAU,KAAM,QAAQ,IAAK,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,WAAW,UAAU,CAAC;AAEhK,UAAK,SAAS,QAAS,GAAG;AACtB,iBAAS;AACT;AAAA,MACJ,OAAO;AACH,kBAAU;AAAA,MACd;AAAA,IAEJ;AAEA,QAAI,YAAa,QAAQ,KAAK,KAAM;AAAA,EACxC;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,UAAM,OAAY;AAAA,MACd,KAAK;AAAA,MACL,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,WAAW;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,KAAK;AAAA,IACT;AAEA,WAAO,EAAE,MAAM,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEvG,QAAI,QAAQ,IAAI,UAAU,GAAG,QAAQ,GAAG,SAAU,IAAI,QAAQ;AAE9D,eAAW,OAAO,OAAO,KAAK,IAAI,GAAG;AACjC,YAAM,QAAQ,IAAI,IAAI,OAAO,MAAM,QAAQ,GAAG;AAC9C,YAAM,QAAQ,QAAQ,WAAW,KAAK,EAAE,eAAe,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC,IAAI;AAE1G,YAAM,OAAO,MAAO,SAAS,QAAS,OAAO,OAAO,SAAS,OAAO,EAAE;AACtE,aAAO,EAAE,MAAM,MAAM,KAAK,GAAG,GAAG,GAAG,IAAK,SAAS,QAAS,OAAO,GAAG,QAAQ,GAAG,UAAU,SAAS,MAAM,CAAC;AACzG,aAAO,EAAE,MAAM,MAAM,IAAI,MAAM,MAAM,QAAQ,MAAM,EAAE,GAAG,GAAI,SAAS,QAAS,OAAO,GAAG,QAAQ,GAAG,UAAU,SAAS,OAAO,OAAO,SAAS,WAAW,UAAU,CAAC;AAEnK;AACA,UAAI,SAAS,GAAG;AACZ,gBAAQ;AACR,iBAAS;AAAA,MACb;AAAA,IACJ;AAEA,QAAI,WAAW,QAAQ,IAAI,UAAU;AAAA,EACzC;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,UAAM,SAAS,IAAI,IAAI,OAAO,UAAU,CAAC;AACzC,UAAM,MAAM,MAAM,QAAQ,OAAO,GAAG,IAAI,OAAO,IAAI,CAAC,IAAK,OAAO,OAAO,CAAC;AAExE,UAAM,cAAmB;AAAA,MACrB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACT;AAEA,WAAO,EAAE,MAAM,MAAM,yCAAyC,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,WAAW,UAAU,CAAC;AAG/H,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AACrD,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AACpE,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AACpE,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AACpE,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AACpE,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC7D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,KAAK,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC7D,WAAO,MAAM,IAAI,QAAQ,KAAK,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC7D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,KAAK,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC7D,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC/C,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,MAAM,EAAE;AACtD,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,MAAM,EAAE;AAGtD,WAAO,EAAE,MAAM,MAAM,0BAAuB,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AAClG,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,SAAS,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAElI,WAAO,EAAE,MAAM,MAAM,SAAS,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AACpG,WAAO,EAAE,MAAM,MAAM,YAAY,OAAO,QAAQ,KAAK,aAAU,OAAO,YAAY,EAAE,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAErL,WAAO,EAAE,MAAM,MAAM,kBAAe,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC1G,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,QAAQ,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEjJ,WAAO,EAAE,MAAM,MAAM,uBAAoB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC/G,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,SAAS,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAElJ,WAAO,EAAE,MAAM,MAAM,MAAM,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AACjG,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,MAAM,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAE/I,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,CAAC;AACvG,WAAO,EAAE,MAAM,MAAM,WAAW,OAAO,YAAY,QAAQ,OAAO,YAAY,OAAO,EAAE,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAGvL,WAAO,EAAE,MAAM,MAAM,eAAY,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACxF,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,UAAU,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEnI,WAAO,EAAE,MAAM,MAAM,gBAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACzG,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,QAAQ,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEjJ,WAAO,EAAE,MAAM,MAAM,MAAM,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAClG,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,MAAM,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAE/I,WAAO,EAAE,MAAM,MAAM,4BAAsB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAClH,WAAO,EAAE,MAAM,MAAM,OAAO,YAAY,MAAM,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAG/I,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC1F,WAAO,EAAE,MAAM,MAAM,IAAI,QAAQ,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAElH,WAAO,EAAE,MAAM,MAAM,cAAW,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACvG,WAAO,EAAE,MAAM,MAAM,IAAI,OAAO,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEjI,WAAO,EAAE,MAAM,MAAM,SAAS,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACrG,WAAO,EAAE,MAAM,MAAM,IAAI,SAAS,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEnI,WAAO,EAAE,MAAM,MAAM,mBAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACzG,WAAO,EAAE,MAAM,MAAM,IAAI,QAAQ,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAElI,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC1G,WAAO,EAAE,MAAM,MAAM,IAAI,SAAS,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEnI,WAAO,EAAE,MAAM,MAAM,mBAAgB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC5G,WAAO,EAAE,MAAM,MAAM,IAAI,SAAS,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEnI,QAAI,WAAW;AAAA,EACnB;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,QAAI,IAAI,OAAO,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,IAAI,IAAI,OAAO,GAAG;AAEjG,WAAO,EAAE,MAAM,MAAM,oCAAiC,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,WAAW,UAAU,CAAC;AAGvH,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,IAAI,MAAM,UAAU,IAAI,MAAM,IAAI,SAAS,IAAI,UAAU,EAAE;AACvG,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9C,UAAM,UAAU,CAAC,KAAK,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,KAAK;AAC1G,eAAW,KAAK,QAAS,QAAO,MAAM,IAAI,QAAQ,GAAG,IAAI,UAAU,GAAG,IAAI,MAAM,UAAU,IAAI,MAAM,IAAI,SAAS,IAAI,UAAU,EAAE;AAGjI,WAAO,EAAE,MAAM,MAAM,qBAAkB,GAAG,IAAI,QAAQ,MAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC9H,WAAO,EAAE,MAAM,MAAM,2CAAkC,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC7I,WAAO,EAAE,MAAM,MAAM,UAAU,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AACtH,WAAO,EAAE,MAAM,MAAM,WAAW,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AACtH,WAAO,EAAE,MAAM,MAAM,QAAQ,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACrH,WAAO,EAAE,MAAM,MAAM,MAAM,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACpH,WAAO,EAAE,MAAM,MAAM,UAAU,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AACvH,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5H,WAAO,EAAE,MAAM,MAAM,eAAe,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5H,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC1H,WAAO,EAAE,MAAM,MAAM,kBAAe,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5H,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC3H,WAAO,EAAE,MAAM,MAAM,aAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC3H,WAAO,EAAE,MAAM,MAAM,iBAAc,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5H,WAAO,EAAE,MAAM,MAAM,gBAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAG3H,QAAI,OAAO,IACP,UAAU,IAAI,MAAM,UAAU,IAAI,KAAK,IACvC,SAAS;AACb,eAAW,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,OAAO,IAAI,QAAQ,GAAG;AACpD,UAAI,OAAO,IAAI;AACf,WAAK,QAAQ,KAAK,MAAM,MAAM,IAAI,EAAE,KAAK,GAAG;AAE5C,gBAAU,MAAM,OAAO,EAAE,MAAM,MAAM,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,UAAU,MAAM,KAAK,CAAC;AACvH,UAAI,UAAU,SAAS;AACnB,YAAI,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI;AACjC,YAAI,WAAW,IAAI,MAAM,UAAU,IAAI,MAAM;AAC7C,eAAO;AAAA,MACX;AAEA,YAAM,UAAU,IAAI,WAAW,CAAC;AAChC,YAAM,OAAO,QAAQ,MAAM,aAAa,QAAQ,MAAM,UAAU,CAAC;AACjE,YAAM,MAAM,QAAQ,KAAK,WAAW,CAAC;AACrC,YAAM,MAAM,CAAC,MAAW,WAAW,KAAK,MAAM,EAAE,eAAe,SAAS,EAAE,uBAAuB,EAAE,CAAC;AAEpG,YAAM,SAAS,MAAM,OAAO,EAAE,MAAM,MAAM,KAAK,OAAO,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,MAAM,UAAU,IAAI,QAAQ,OAAO,OAAO,OAAO,CAAC;AAC/I,YAAM,IAAI,IAAI,UAAU,QAAS,SAAO,KAAK;AAE7C,aAAO,EAAE,MAAM,MAAM,KAAK,OAAO,GAAG,GAAG,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,SAAS,CAAC;AACtF,aAAO,EAAE,MAAM,MAAM,KAAK,KAAK,GAAG,IAAI,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACrG,aAAO,EAAE,MAAM,MAAM,KAAK,SAAS,KAAK,OAAO,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC1H,aAAO,EAAE,MAAM,MAAM,KAAK,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACtG,aAAO,EAAE,MAAM,MAAM,KAAK,MAAM,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACvG,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC5G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,MAAM,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC9G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,KAAK,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC7G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,KAAK,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC7G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC3G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,KAAK,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC7G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC5G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,KAAK,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC7G,aAAO,EAAE,MAAM,MAAM,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC3G,cAAQ,SAAS;AAAA,IACrB;AACA,QAAI,WAAW;AACf,WAAO;AAAA,EACX;AAIA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,EAAE,MAAM,MAAM,oBAAoB,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,WAAW,UAAU,CAAC;AAC1G,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9C,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AAErD,WAAO,EAAE,MAAM,MAAM,oCAA8B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,QAAQ,WAAW,UAAU,CAAC;AAC7I,WAAO,EAAE,MAAM,MAAM,sBAAsB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,QAAQ,WAAW,UAAU,CAAC;AAErJ,QAAI,MAAM,OAAO,EAAE,MAAM,MAAM,IAAI,IAAI,OAAO,SAAS,UAAU,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,MAAM,KAAK,CAAC,KAAK,GAAG;AAC3J,aAAO,EAAE,MAAM,MAAM,IAAI,IAAI,OAAO,SAAS,OAAO,MAAM,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AAAA,IACnJ,OAAO;AACH,aAAO,EAAE,MAAM,MAAM,IAAI,IAAI,OAAO,SAAS,UAAU,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AAAA,IACrI;AAAC;AAED,QAAI,WAAW;AAAA,EACnB;AAEA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,gBAAgB,MAAM,mBAAmB,OAAO;AACtD,UAAM,gBAAgB,MAAM,mBAAmB,OAAO;AACtD,UAAM,gBAAgB,eAAe,aAAa,UAAO,aAAa,KAAK,IAAI,IAAI,QAAQ,YAAY,YAAY,EAAE;AAErH,WAAO,EAAE,MAAM,MAAM,eAAe,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AAClG,WAAO,EAAE,MAAM,MAAM,6BAA6B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,WAAW,SAAS,CAAC;AAAA,EAClJ;AAGA,iBAAe,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAOG;AACC,QAAI,OAAO,OAAO,QAAW;AACzB,UAAI,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,MAAM;AAC3C,cAAM,MAAM,MAAM,OAAO,EAAE,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAAE,KAAK,UAAQ,YAAY,IAAI,CAAC;AAEjG,YAAM,QAAQ,WAAW,KAAK,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,OAAK,EAAE,WAAW,CAAC,CAAC;AAG3E,YAAM,QAAQ,KAAK,WAAW,gBAAgB;AAG9C,YAAM,QAAQ,QACR,MAAM,IAAI,IAAI,SAAS,KAAK,IAC5B,MAAM,IAAI,IAAI,SAAS,KAAK;AAElC,YAAM,KAAK,UAAU,OAAO;AAAA,QACxB;AAAA,QACA,GAAG,IAAI,SAAS,IAAI;AAAA;AAAA,QACpB,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,EACJ;AAGA,iBAAe,YAAY,cAAiC;AACxD,UAAMA,aAAY,OAAO,WAAW,eAAe,OAAO,OAAO,eAAe;AAChF,QAAIA,YAAW;AAEX,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAM,SAAS,IAAI,WAAW;AAC9B,eAAO,cAAc,YAAY;AACjC,eAAO,YAAY,MAAM,QAAQ,OAAO,MAAM;AAC9C,eAAO,UAAU;AAAA,MACrB,CAAC;AAAA,IACL,OAAO;AAEH,UAAI;AACA,YAAI;AAEJ,YAAI,wBAAwB,MAAM;AAC9B,gBAAM,cAAc,MAAM,aAAa,YAAY;AACnD,mBAAS,OAAO,KAAK,WAAW;AAAA,QACpC,WAAW,OAAO,SAAS,YAAY,GAAG;AACtC,mBAAS;AAAA,QACb,OAAO;AACH,mBAAS,OAAO,KAAK,YAAY;AAAA,QACrC;AACA,eAAO,OAAO,SAAS,QAAQ;AAAA,MACnC,SAAS,KAAK;AACV,cAAM,IAAI,MAAM,uBAAuB,GAAG,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EACJ;AAGA,iBAAe,UAAU,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC/D,cAAU,MAAM,MAAM,WAAW,EAAE,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAAE,KAAK,UAAQ,YAAY,IAAI,CAAC;AAGrG,UAAM,aAAa,SAAS,MAAM,GAAG,EAAE,CAAC;AACxC,UAAM,QAAQ,WAAW,KAAK,KAAK,UAAU,GAAG,OAAK,EAAE,WAAW,CAAC,CAAC;AAGpE,UAAM,QAAQ,SAAS,WAAW,gBAAgB;AAGlD,UAAM,QAAQ,QACR,MAAM,IAAI,IAAI,SAAS,KAAK,IAC5B,MAAM,IAAI,IAAI,SAAS,KAAK;AAElC,SAAK,UAAU,OAAO;AAAA,MAClB,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,MACH,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA,IAChB,CAAC;AAAA,EACL;AAIA,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC1C,UAAM,YAAY;AAClB,YAAQ,MAAM,IAAI,IAAI,KAAK,CAAC;AAAA,EAChC,CAAC;AACL;;;ACpxBA,SAAS,eAAAC,cAAa,iBAAAC,gBAAe,OAAAC,YAAoB;AACzD,SAAS,aAAAC,kBAAiB;AAC1B,OAAO,YAAY;AAKnB,IAAM,SAAS,OAAO,OAAkI,CAAC,MAAM;AAC3J,QAAM,SAAS,IAAIA,WAAU;AAAA,IACzB,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,eAAe;AAAA;AAAA,EACnB,CAAC;AAED,MAAI,MAOA;AAAA,IACA,KAAK,MAAMH,aAAY,OAAO;AAAA,IAC9B,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,EACb,GAAG,YAAY,OAAO,WAAW,aAC7B,MAAM,OAAO,MAAM,KAAK,OAAO,EAAE,GACjC,SAAS,KAAK,QACd,OAAO,KAAK,MACZ,UAAU,KAAK,SACf,SAAS,KAAK,UAAU,CAAC;AAI7B,MAAI,MAAM,KAAK,IAAI,IAAI,QAAQ;AAAA,IAAC;AAAA,IAC5B,MAAM,OAAO,IAAI,IACjB,MAAM,OAAO,IAAI,IACjB,MAAM,OAAO,IAAI,IACjB,MAAM,OAAO,IAAI,IACjB,MAAM,OAAO,IAAI;AAAA,EACrB,CAAC,CAAC;AACF,MAAI,QAAS,IAAI,MAAM,CAAC,EAAG,SAAS;AACpC,MAAI,SAAU,IAAI,MAAM,CAAC,EAAG,UAAU;AAItC,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW,GAAW;AACzE,SAAK,cAAc;AAAA,MACf,GAAG,IAAI;AAAA,MACP,GAAI,IAAI,SAAS,KAAM,IAAI;AAAA,MAC3B,OAAQ,IAAI,IAAI,KAAM,IAAI,QAAS,IAAI,QAAQ,IAAK,IAAI;AAAA,MACxD,QAAQ;AAAA,MACR,aAAaE,KAAI,GAAG,GAAG,CAAC;AAAA,MACxB,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AAGA,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW;AAC9D,UAAM,SAAS,KAAK,IAAI,GAAG,CAAC;AAC5B,UAAM,OAAO,KAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC;AAC1C,UAAM,SAAS,IAAI,SAAS,IAAI;AAEhC,SAAK,SAAS;AAAA,MACV,OAAO,EAAE,GAAG,QAAQ,GAAG,OAAO;AAAA,MAC9B,KAAK,EAAE,GAAG,MAAM,GAAG,OAAO;AAAA,MAC1B,OAAOA,KAAI,GAAG,GAAG,CAAC;AAAA,MAClB,WAAW;AAAA,MACX,WAAW,CAAC,GAAG,CAAC;AAAA,IACpB,CAAC;AAAA,EACL;AAGA,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW;AAC9D,UAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC;AACrD,UAAM,SAAS,KAAK,IAAI,IAAI,SAAS,IAAI,GAAG,CAAC;AAC7C,UAAM,OAAO,KAAK,IAAI,IAAI,UAAU,IAAI,KAAK,GAAG,CAAC;AAEjD,SAAK,SAAS;AAAA,MACV,OAAO,EAAE,GAAG,QAAQ,GAAG,OAAO;AAAA,MAC9B,KAAK,EAAE,GAAG,QAAQ,GAAG,KAAK;AAAA,MAC1B,OAAOA,KAAI,GAAG,GAAG,CAAC;AAAA,MAClB,WAAW;AAAA,MACX,WAAW,CAAC,GAAG,CAAC;AAAA,IACpB,CAAC;AAAA,EACL;AAEA,iBAAe,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,OAAO;AAAA,IACP;AAAA,IACA,QAAQ;AAAA,IACR,OAAO;AAAA,EACX,GAWoB;AAChB,QAAI;AAEJ,YAAQ,WAAW;AAAA,MACf,KAAK;AACD,eAAO,MAAM,IAAI,IAAI,UAAUD,eAAc,cAAc;AAC3D;AAAA,MACJ,KAAK;AACD,eAAO,MAAM,IAAI,IAAI,UAAUA,eAAc,gBAAgB;AAC7D;AAAA,MACJ;AACI,eAAO,MAAM,IAAI,IAAI,UAAUA,eAAc,UAAU;AAAA,IAC/D;AAGA,QAAI,WAAW,IAAI,IAAI,MAAO,YAAW,IAAI,QAAQ,IAAI;AAGzD,UAAM,sBAAsB,cAAc,OAAO;AAEjD,UAAM,QAAQ,SAAS,MAAM,UAAU,MAAM,IAAI;AACjD,QAAI,KAAM,QAAO,MAAM;AAEvB,UAAM,QAAQ,CAAC,MAAM,UAAU;AAC3B,YAAM,YAAY,KAAK,kBAAkB,MAAM,IAAI;AACnD,UAAI,QAAQ,IAAI;AAEhB,UAAI,UAAU,UAAU;AACpB,gBAAQ,KAAK,WAAW,aAAa;AAAA,MACzC,WAAW,UAAU,SAAS;AAC1B,gBAAQ,IAAI,WAAW;AAAA,MAC3B;AAEA,WAAK,SAAS,MAAM;AAAA,QAChB,GAAG;AAAA,QACH,GAAK,IAAI,SAAS,uBAAwB,IAAI,KAAM,QAAQ;AAAA,QAC5D;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AACD,WAAO,MAAM;AAAA,EACjB;AAGA,WAAS,SAAS,MAAc,UAAkB,MAAe,UAA4B;AACzF,UAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,UAAM,QAAkB,CAAC;AACzB,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,WAAW,OAAO,OAAO;AAC/B,YAAM,YAAY,KAAK,kBAAkB,UAAU,QAAQ;AAE3D,UAAI,YAAY,YAAY,SAAS,IAAI;AACrC,cAAM,KAAK,KAAK,KAAK,CAAC;AACtB,eAAO,OAAO;AAAA,MAClB,OAAO;AACH,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,KAAK,KAAK,MAAM,IAAI;AACpB,YAAM,KAAK,KAAK,KAAK,CAAC;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AAQA,iBAAe,cAAc;AACzB,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,OAAO;AAAA,EACjB;AAIA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,QAAI,CAAC,KAAM,QAAO;AAElB,QAAI,KAAK;AAET,QAAI,OAAO,SAAS,aAAa;AAC7B,YAAM,OAAO,EAAE,MAAM,KAAK,MAAM,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;AACxE,YAAM;AAAA,IACV;AAEA,UAAM,OAAO,KAAK,KAAK,QAAQ,QAAQ,CAAC;AACxC,UAAM,YAAY,KAAK,aAAa,CAAC;AAErC,QAAI,OAAO,MAAM,OAAO;AAAA,MACpB;AAAA,MACA,MAAM,GAAG,KAAK,SAAS,uBAAuB;AAAA,MAC9C,GAAG,IAAI;AAAA,MACP,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,MACP,WAAW;AAAA,IACf,CAAC;AAED,QAAI,WAAW,OAAO,KAAK,MAAM;AAEjC,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM,SAAS,KAAK,QAAQ,KAAK,YAAY,KAAK,MAAM,KAAK;AAAA,MAC7D,GAAG,IAAI;AAAA,MACP,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,IACX,CAAC;AAED,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM,GAAG,UAAU,QAAQ,yBAAyB,UAAO,UAAU,OAAO,KAAK;AAAA,MACjF,GAAG,IAAI;AAAA,MACP,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,IACX,CAAC;AAED,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM,GAAG,UAAU,WAAW,YAAY,MAAM,UAAU,OAAO,SAAS;AAAA,MAC1E,GAAG,IAAI;AAAA,MACP,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,IACX,CAAC;AAED,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM,GAAG,UAAU,QAAQ,YAAY,MAAM,UAAU,MAAM,IAAI,UAAU,UAAU,QAAQ,KAAK;AAAA,MAClG,GAAG,IAAI;AAAA,MACP,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,IACX,CAAC;AAED,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,KAAK;AAE3C,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,MACP,WAAW;AAAA,IACf,CAAC;AAED,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,KAAK;AAE3C,QAAI,WAAW;AACf,WAAO;AAAA,EACX;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,UAAM,WAAW,MAAM,QAAQ,KAAK,KAAK,QAAQ,GAAG,IAC9C,IAAI,IAAI,OAAO,MACf,KAAK,KAAK,QAAQ,MACd,CAAC,IAAI,IAAI,OAAO,GAAG,IACnB,CAAC;AAEX,QAAI,QAAQ,MAAM;AACd,UAAI,SAAS;AACb,iBAAW,OAAO,UAAU;AACxB,cAAM,OAAO,KAAK,QAAQ,CAAC;AAC3B,cAAM,OAAO,KAAK,SAAS;AAC3B,cAAM,eAAe;AAAA,UACjB;AAAA,UACA,MAAM;AAAA,UACN,MAAM,IAAI,IAAI,UAAUA,eAAc,UAAU;AAAA,UAChD;AAAA,QACJ;AACA,kBAAU,aAAa;AAAA,MAC3B;AACA,aAAO,KAAK,SAAS;AAAA,IACzB,OAAO;AACH,UAAI,OAAO,GACP,SAAS;AAEb,aAAO,EAAE,MAAM,MAAM,4BAAsB,GAAG,IAAI,QAAQ,GAAM,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,KAAK,OAAO,OAAO,CAAC;AAE1H,aAAO,EAAE,MAAM,MAAM,oCAAoC,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,CAAC;AAE3H,iBAAW,OAAO,UAAU;AACxB,cAAM,OAAO,KAAK,QAAQ,CAAC;AAC3B,cAAM,MAAM,CAAC,MACT,WAAW,KAAK,MAAM,EAAE,eAAe,SAAS;AAAA,UAC5C,uBAAuB;AAAA,QAC3B,CAAC;AAEL,cAAM,QAAQ,GAAG,KAAK,KAAK,MAAM,KAAK,KAAK;AAC3C,cAAM,SAAS,MAAM,OAAO;AAAA,UACxB;AAAA,UACA,MAAM;AAAA,UACN,GAAG;AAAA,UACH,GAAG,IAAI,UAAU;AAAA,UACjB,UAAU,IAAI,QAAQ;AAAA,UACtB,OAAO;AAAA,QACX,CAAC;AAED,cAAM,IAAI,IAAI,UAAU,QAAQ,SAAS,KAAK;AAE9C,eAAO;AAAA,UACH;AAAA,UACA,MAAM,GAAG,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,MAAM,IAAI,KAAK,MAAM,CAAC,MAAM,IAAI,KAAK,KAAK,CAAC;AAAA,UACzF,GAAG;AAAA,UACH;AAAA,UACA,UAAU,IAAI,QAAQ;AAAA,UACtB,OAAO;AAAA,QACX,CAAC;AAED,gBAAQ,SAAS;AACjB,kBAAU;AAAA,MACd;AAEA,aAAO,MAAM,GAAG,IAAI,IAAI,UAAU,SAAS,IAAI,IAAI,KAAK;AACxD,UAAI,WAAW,IAAI,SAAS;AAC5B,aAAO;AAAA,IACX;AAAA,EACJ;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,QAAI,CAAC,MAAM;AACP,YAAMG,OAAM,KAAK,KAAK,QAAQ,OAAO,CAAC;AACtC,YAAMC,UAAS,MAAM,QAAQD,KAAI,MAAM,IAAIA,KAAI,SAAS,CAACA,KAAI,MAAM;AACnE,aAAO,KAAMC,QAAO,SAAS;AAAA,IACjC;AAAC;AAED,UAAM,QAAQ,KAAK,KAAK,QAAQ,OAAO,WAAW,CAAC;AACnD,UAAM,MAAM,KAAK,KAAK,QAAQ,OAAO,CAAC;AACtC,UAAM,SAAS,MAAM,QAAQ,IAAI,MAAM,IAAI,IAAI,SAAS,CAAC,IAAI,MAAM;AACnE,UAAM,SAAS,WAAW,IAAI,UAAU,MAAM;AAE9C,UAAM,WAAW,MAAM,QAAQ,KAAK,KAAK,QAAQ,GAAG,IAC9C,IAAI,IAAI,OAAO,IAAI,SACnB,KAAK,KAAK,QAAQ,MAAM,IAAI;AAElC,UAAM,MAAM,CAAC,MACT,WAAW,KAAK,MAAM,EAAE,eAAe,SAAS,EAAE,uBAAuB,EAAE,CAAC;AAEhF,UAAM,OAAO,EAAE,MAAM,MAAM,wBAAwB,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AAC7G,UAAM,OAAO,EAAE,MAAM,MAAM,GAAG,QAAQ,IAAI,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,GAAG,OAAO,QAAQ,CAAC;AAEzG,UAAM,OAAO,EAAE,MAAM,MAAM,kBAAkB,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AAC3G,UAAM,OAAO,EAAE,MAAM,MAAM,GAAG,IAAI,MAAM,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,GAAG,OAAO,QAAQ,CAAC;AAErH,UAAM,OAAO,EAAE,MAAM,MAAM,oBAAoB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AAC9G,UAAM,OAAO,EAAE,MAAM,MAAM,GAAG,IAAI,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,GAAG,OAAO,QAAQ,CAAC;AAEpH,UAAM,OAAO,EAAE,MAAM,MAAM,qBAAqB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,QAAQ,WAAW,UAAU,CAAC;AACrI,UAAM,OAAO,EAAE,MAAM,MAAM,cAAc,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,GAAG,OAAO,SAAS,WAAW,UAAU,CAAC;AAEnI,QAAI,SAAS,IAAI,UAAU;AAC3B,UAAM,UAAe;AAAA,MACjB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AACA,eAAW,WAAW,QAAQ;AAC1B,UAAI,CAAC,QAAS;AAEd,YAAM,QAAQ,QAAQ,QAAQ,IAAI,KAAK;AACvC,YAAM,QAAQ,IAAI,QAAQ,IAAI;AAE9B,YAAM,OAAO,EAAE,MAAM,MAAM,MAAM,YAAY,GAAG,GAAG,GAAG,GAAG,QAAQ,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AACrG,YAAM,OAAO,EAAE,MAAM,MAAM,OAAO,GAAG,GAAG,GAAG,QAAQ,UAAU,IAAI,QAAQ,GAAG,OAAO,QAAQ,CAAC;AAE5F,gBAAU;AAAA,IACd;AAEA,UAAM,OAAO,EAAE,MAAM,MAAM,SAAS,GAAG,GAAG,GAAG,QAAQ,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AACzF,UAAM,OAAO,EAAE,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,QAAQ,UAAU,IAAI,QAAQ,GAAG,OAAO,QAAQ,CAAC;AAEvG,WAAO,MAAM,GAAG,SAAS,GAAG,IAAI,KAAK;AACrC,QAAI,UAAU,SAAS;AAEvB,WAAO;AAAA,EACX;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,QAAI,CAAC,MAAM;AACP,UAAI,OAAO;AACX,YAAMC,QAAO,KAAK,KAAK,OAAO,QAAQ,CAAC;AACvC,UAAI,OAAO,KAAKA,KAAI,EAAE,SAAS,GAAG;AAC9B,gBAAQ;AACR,YAAI,OAAOA,MAAK,aAAa,MAAM;AAC/B,kBAAQ;AAAA,QACZ;AAAA,MACJ;AACA,aAAO,MAAM;AAAA,IACjB;AAAC;AAED,UAAM,SAAS,KAAK,KAAK,UAAU,CAAC;AACpC,UAAM,OAAO,KAAK,KAAK,cAAc,CAAC;AACtC,UAAM,MAAM,OAAO,OAAO,CAAC;AAC3B,UAAM,OAAO,OAAO,QAAQ,CAAC;AAC7B,UAAM,QAAQ,IAAI,QAAQ,IAAI,KAAK,IAAI,KAAK,IAAI,oBAAI,KAAK;AACzD,UAAM,gBAAgB,MAAM,mBAAmB,OAAO;AACtD,UAAM,gBAAgB,MAAM,mBAAmB,OAAO;AAEtD,UAAM,QAAQ,OAAO,KAAK,GAAG,QAAQ,OAAO,EAAE,KAAK;AACnD,UAAM,iBAAiB,MAAM,QAAQ,kBAAkB,KAAK,EAAE,KAAK;AAEnE,UAAM,YAAY,OAAO,YAAY,MAAM,+BAA4B;AACvE,UAAM,UAAU,6BAAuB,aAAa,IAAI,aAAa;AACrE,UAAM,QAAQ,IAAI,SAAS;AAC3B,UAAM,MAAM,IAAI,OAAO;AAEvB,UAAM,MAAM,MAAM,MAAM,QAAQ,KAAK,GAAG,KAAK;AAC7C,UAAM,WAAW,MAAM,SAAS;AAChC,UAAM,YAAY,MAAM,aAAa;AACrC,UAAM,WAAW,YAAY,GAAG,UAAU,QAAQ,EAAE,KAAK,UAAU,OAAO,KAAK,KAAK,UAAU,WAAW,EAAE,KAAK,UAAU,QAAQ,EAAE,GAAG,YAAY,IAAI;AAEvJ,UAAM,SAAS,KAAK,UAAU;AAG9B,UAAM,OAAO,EAAE,MAAM,MAAM,oCAAoC,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AACjJ,UAAM,OAAO,EAAE,MAAM,MAAM,qCAAqC,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,OAAO,OAAO,SAAS,CAAC;AAChI,UAAM,OAAO,EAAE,MAAM,MAAM,gBAAgB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,SAAS,CAAC;AAE5G,UAAM,OAAO,EAAE,MAAM,MAAM,gBAAgB,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AACzI,QAAI,WAAW;AAEf,QAAI,UAAU;AACV,YAAM,OAAO,EAAE,MAAM,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AAC5H,UAAI,WAAW;AAAA,IACnB;AACA,QAAI,UAAU;AACV,YAAM,OAAO,EAAE,MAAM,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AAC3H,UAAI,WAAW;AAAA,IACnB;AAGA,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM,YAAY,GAAG,UAAU,KAAK,OAAO,aAAa,IAAI,aAAa;AAAA,MACzE,GAAG;AAAA,MACH,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO;AAAA,MACP,WAAW;AAAA,IACf,CAAC;AAID,UAAM,gBAAgB,MAAM,OAAO,UAAU,MAAM;AACnD,UAAM,OAAO;AAAA,MACT;AAAA,MACA,KAAK;AAAA,MACL,GAAI,IAAI,QAAQ,IAAK;AAAA,MACrB,GAAG,IAAI,UAAU;AAAA,MACjB,GAAG;AAAA,MACH,GAAG;AAAA,IACP,CAAC;AAED,UAAM,OAAO,EAAE,MAAM,MAAM,WAAW,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AAC7H,UAAM,OAAO,EAAE,MAAM,MAAM,SAAS,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,UAAU,CAAC;AAK3H,UAAM,OAAO;AAAA,MACT;AAAA,MACA,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG,IAAI,UAAU;AAAA,MACjB,UAAU,IAAI,QAAQ;AAAA,MACtB,OAAO;AAAA,IACX,CAAC;AAED,QAAI,WAAW;AACf,WAAO;AAAA,EACX;AAKA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,QAAI,QAAQ,MAAM;AACd,UAAI,OAAO;AACX,UAAI,OAAO,UAAU,aAAa;AAC9B,eAAO,QAAQ,SAAS;AACxB,eAAO,KAAK,MAAM,IAAI;AAAA,MAC1B;AACA,aAAO,OAAO;AAAA,IAClB,OAAO;AACH,aAAO,MAAM,GAAG,IAAI,IAAI,SAAS,IAAI,KAAK;AAC1C,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,iBAAe,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAOG;AACC,QAAI,OAAO,OAAO,QAAW;AACzB,UAAI,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,MAAM;AAC3C,cAAM,MAAM,MAAM,OAAO,EAAE,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAAE,KAAK,UAAQ,YAAY,IAAI,CAAC;AAEjG,YAAM,QAAQ,WAAW,KAAK,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,OAAK,EAAE,WAAW,CAAC,CAAC;AAG3E,YAAM,QAAQ,KAAK,WAAW,gBAAgB;AAG9C,YAAM,QAAQ,QACR,MAAM,IAAI,IAAI,SAAS,KAAK,IAC5B,MAAM,IAAI,IAAI,SAAS,KAAK;AAElC,YAAM,KAAK,UAAU,OAAO;AAAA,QACxB;AAAA,QACA,GAAG,IAAI,SAAS,IAAI;AAAA;AAAA,QACpB,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,WAAS,YAAY,cAAiC;AAClD,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEpC,YAAMC,aAAY,OAAO,WAAW,eAAe,OAAO,OAAO,eAAe;AAEhF,UAAIA,YAAW;AACX,cAAM,SAAS,IAAI,WAAW;AAC9B,eAAO,cAAc,YAAY;AACjC,eAAO,YAAY,MAAM,QAAQ,OAAO,MAAM;AAC9C,eAAO,UAAU,CAAC,QAAQ,OAAO,GAAG;AAAA,MACxC,OAAO;AAEH,YAAI;AACA,gBAAM,SAAS,OAAO,SAAS,YAAY,IACrC,eACA,OAAO,KAAK,YAAY;AAC9B,gBAAM,SAAS,wCAAwC,OAAO,SAAS,QAAQ,CAAC;AAChF,kBAAQ,MAAM;AAAA,QAClB,SAAS,KAAK;AACV,iBAAO,GAAG;AAAA,QACd;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAGA,iBAAe,UAAU,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC/D,cAAU,MAAM,MAAM,WAAW,EAAE,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAAE,KAAK,UAAQ,YAAY,IAAI,CAAC;AAGrG,UAAM,aAAa,SAAS,MAAM,GAAG,EAAE,CAAC;AACxC,UAAM,QAAQ,WAAW,KAAK,KAAK,UAAU,GAAG,OAAK,EAAE,WAAW,CAAC,CAAC;AAGpE,UAAM,QAAQ,SAAS,WAAW,gBAAgB;AAGlD,UAAM,QAAQ,QACR,MAAM,IAAI,IAAI,SAAS,KAAK,IAC5B,MAAM,IAAI,IAAI,SAAS,KAAK;AAElC,SAAK,UAAU,OAAO;AAAA,MAClB,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,MACH,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA,IAChB,CAAC;AAAA,EACL;AAIA,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC1C,UAAM,YAAY;AAClB,YAAQ,MAAM,IAAI,IAAI,KAAK,CAAC;AAAA,EAChC,CAAC;AACL;;;AC5mBA,SAAS,eAAAC,cAAa,iBAAAC,gBAAe,OAAAC,YAAoB;AACzD,SAAS,aAAAC,kBAAiB;AAC1B,OAAOC,gBAAe;AAOtB,IAAM,QAAQ,OAAO,OAA0F,EAAE,KAAK,CAAC,EAAa,MAAM;AACtI,QAAM,SAAS,IAAID,WAAU;AAAA,IACzB,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,eAAe;AAAA;AAAA,EACnB,CAAC;AAED,MAAI,MAOA;AAAA,IACA,KAAK,MAAMH,aAAY,OAAO;AAAA,IAC9B,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,EACb,GAAG,YAAY,OAAO,WAAW,aAC7B,MAAM,KAAK,KACX,OAAO,KAAK,MACZ,UAAU,KAAK,SACf,YAAY,KAAK,aAAa;AAGlC,MAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,CAAC;AAChC,MAAI,QAAS,IAAI,MAAM,CAAC,EAAG,SAAS;AACpC,MAAI,SAAU,IAAI,MAAM,CAAC,EAAG,UAAU;AAItC,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW,GAAW;AACzE,SAAK,cAAc;AAAA,MACf,GAAG,IAAI;AAAA,MACP,GAAI,IAAI,SAAS,KAAM,IAAI;AAAA,MAC3B,OAAQ,IAAI,IAAI,KAAM,IAAI,QAAS,IAAI,QAAQ,IAAK,IAAI;AAAA,MACxD,QAAQ;AAAA,MACR,aAAaE,KAAI,GAAG,GAAG,CAAC;AAAA,MACxB,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AAGA,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW;AAC9D,UAAM,SAAS,KAAK,IAAI,GAAG,CAAC;AAC5B,UAAM,OAAO,KAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC;AAC1C,UAAM,SAAS,IAAI,SAAS,IAAI;AAEhC,SAAK,SAAS;AAAA,MACV,OAAO,EAAE,GAAG,QAAQ,GAAG,OAAO;AAAA,MAC9B,KAAK,EAAE,GAAG,MAAM,GAAG,OAAO;AAAA,MAC1B,OAAOA,KAAI,GAAG,GAAG,CAAC;AAAA,MAClB,WAAW;AAAA,MACX,WAAW,CAAC,GAAG,CAAC;AAAA,IACpB,CAAC;AAAA,EACL;AAGA,iBAAe,OAAO,MAAW,GAAW,GAAW,GAAW;AAC9D,UAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC;AACrD,UAAM,SAAS,KAAK,IAAI,IAAI,SAAS,IAAI,GAAG,CAAC;AAC7C,UAAM,OAAO,KAAK,IAAI,IAAI,UAAU,IAAI,KAAK,GAAG,CAAC;AAEjD,SAAK,SAAS;AAAA,MACV,OAAO,EAAE,GAAG,QAAQ,GAAG,OAAO;AAAA,MAC9B,KAAK,EAAE,GAAG,QAAQ,GAAG,KAAK;AAAA,MAC1B,OAAOA,KAAI,GAAG,GAAG,CAAC;AAAA,MAClB,WAAW;AAAA,MACX,WAAW,CAAC,GAAG,CAAC;AAAA,IACpB,CAAC;AAAA,EACL;AAEA,iBAAe,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,OAAO;AAAA,IACP;AAAA,IACA,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,UAAU;AAAA,EACd,GAYoB;AAChB,QAAI;AAEJ,YAAQ,WAAW;AAAA,MACf,KAAK;AACD,eAAO,MAAM,IAAI,IAAI,UAAUD,eAAc,cAAc;AAC3D;AAAA,MACJ,KAAK;AACD,eAAO,MAAM,IAAI,IAAI,UAAUA,eAAc,gBAAgB;AAC7D;AAAA,MACJ;AACI,eAAO,MAAM,IAAI,IAAI,UAAUA,eAAc,UAAU;AAAA,IAC/D;AAGA,QAAI,WAAW,IAAI,IAAI,MAAO,YAAW,IAAI,QAAQ,IAAI;AAGzD,UAAM,sBAAsB,cAAc,OAAO;AAEjD,UAAM,QAAQ,SAAS,GAAG,IAAI,IAAI,UAAU,MAAM,IAAI;AACtD,QAAI,KAAM,QAAO,MAAM;AAEvB,UAAM,QAAQ,CAAC,MAAM,UAAU;AAC3B,YAAM,YAAY,KAAK,kBAAkB,MAAM,IAAI;AACnD,UAAI,QAAQ,IAAI;AAEhB,UAAI,UAAU,UAAU;AACpB,gBAAQ,KAAK,WAAW,aAAa;AAAA,MACzC,WAAW,UAAU,SAAS;AAC1B,gBAAQ,IAAI,WAAW;AAAA,MAC3B;AAEA,WAAK,SAAS,MAAM;AAAA,QAChB,GAAG;AAAA,QACH,GAAK,IAAI,SAAS,uBAAwB,IAAI,KAAM,QAAQ;AAAA,QAC5D;AAAA,QACA;AAAA,QACA,SAAS,WAAW;AAAA,MACxB,CAAC;AAAA,IACL,CAAC;AACD,WAAO,MAAM;AAAA,EACjB;AAGA,WAAS,SAAS,MAAc,UAAkB,MAAe,UAA4B;AACzF,UAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,UAAM,QAAkB,CAAC;AACzB,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,WAAW,OAAO,OAAO;AAC/B,YAAM,YAAY,KAAK,kBAAkB,UAAU,QAAQ;AAE3D,UAAI,YAAY,YAAY,SAAS,IAAI;AACrC,cAAM,KAAK,KAAK,KAAK,CAAC;AACtB,eAAO,OAAO;AAAA,MAClB,OAAO;AACH,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,KAAK,KAAK,MAAM,IAAI;AACpB,YAAM,KAAK,KAAK,KAAK,CAAC;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AAGA,WAAS,WAAW,OAAe;AAE/B,UAAM,WAAW,SAAS,IAAI,QAAQ,OAAO,EAAE;AAE/C,QAAI,QAAQ,WAAW,IAAI;AAEvB,aAAO,QAAQ,QAAQ,gCAAgC,aAAa;AAAA,IACxE,WAAW,QAAQ,WAAW,IAAI;AAE9B,aAAO,QAAQ,QAAQ,uCAAuC,gBAAgB;AAAA,IAClF,OAAO;AACH,aAAO;AAAA,IACX;AAAA,EACJ;AAQA,iBAAe,cAAc;AAEzB,UAAM,OAAO;AAEb,QAAI,IAAI,UAAU,SAAS;AACvB,YAAM,OAAO;AACjB,UAAM,OAAO;AAEb,QAAI,MAAM,MAAM,OAAO;AACvB,UAAM,OAAO;AACb,UAAM,OAAO;AAEb,WAAO,CAAC,KAAK;AACT,UAAI,UAAU;AACd,UAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,CAAC;AAChC,YAAM,OAAO;AACb,YAAM,MAAM,OAAO;AAAA,IACvB;AAEA,eAAW,CAAC,GAAG,IAAI,KAAK,IAAI,MAAM,QAAQ,GAAG;AACzC,aAAO,EAAE,MAAM,MAAM,GAAG,MAAM,SAAS,IAAI,CAAC,IAAI,IAAI,MAAM,MAAM,IAAI,GAAG,KAAK,GAAG,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,SAAS,CAAC;AACrJ,UAAI;AACA,eAAO,EAAE,MAAM,MAAM,IAAI,MAAM,gBAAa,GAAG,GAAG,GAAG,IAAI,SAAS,KAAM,UAAU,IAAI,OAAO,OAAO,UAAU,WAAW,WAAW,SAAS,IAAI,CAAC;AAAA,IAC1J;AAAA,EACJ;AAIA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,MAAM,GAAG,IAAI,SAAS,IAAI,OAAO,GAAG;AAC3C,WAAO,MAAM,GAAG,IAAI,SAAS,IAAI,OAAO,EAAE;AAC1C,WAAO,MAAM,GAAG,IAAI,SAAS,IAAI,OAAO,GAAG;AAC3C,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,EAAE;AACvD,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAG7D,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC9D,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,KAAK,IAAI,OAAO,EAAE;AAChE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,KAAK,IAAI,OAAO,EAAE;AAChE,WAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,UAAU,KAAK,IAAI,OAAO,EAAE;AAE/D,WAAO,EAAE,MAAM,MAAM,mCAA6B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,SAAS,CAAC;AACxH,WAAO,EAAE,MAAM,MAAM,uCAAiC,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,SAAS,CAAC;AAE1I,QAAI,KAAK;AACT,QAAI,OAAO,SAAS,aAAa;AAC7B,YAAM,OAAO,EAAE,MAAM,KAAK,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AACxF,YAAM;AAAA,IACV;AAGA,QAAI,WAAW;AACf,WAAO,MAAM,OAAO,EAAE,MAAM,MAAM,UAAU,MAAM,GAAG,IAAI,SAAS,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,WAAW,MAAM,KAAK,CAAC,KAAK,GAAG;AAC7L;AAAA,IACJ;AACA,WAAO,EAAE,MAAM,MAAM,UAAU,MAAM,GAAG,IAAI,SAAS,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AAGhK,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,YAAY,WAAW,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5K,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,WAAW,EAAE,MAAM,IAAI,SAAS,OAAO,EAAE,KAAK,IAAI,SAAS,QAAQ,EAAE,UAAO,IAAI,SAAS,OAAO,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AACjO,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,QAAQ,EAAE,MAAM,IAAI,SAAS,MAAM,EAAE,UAAU,IAAI,SAAS,QAAQ,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAGrM,QAAI,IAAI,SAAS;AACb,iBAAW;AACX,aAAO,MAAM,OAAO,EAAE,MAAM,MAAM,UAAU,MAAM,GAAG,IAAI,SAAS,KAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,WAAW,MAAM,KAAK,CAAC,KAAK,GAAG;AAC3M;AAAA,MACJ;AACA,aAAO,EAAE,MAAM,MAAM,UAAU,MAAM,GAAG,IAAI,SAAS,KAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AAE9K,aAAO,EAAE,MAAM,MAAM,GAAG,MAAM,YAAY,WAAW,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC1L,aAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,WAAW,EAAE,MAAM,IAAI,SAAS,OAAO,EAAE,KAAK,IAAI,SAAS,QAAQ,EAAE,UAAO,IAAI,SAAS,OAAO,EAAE,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC/O,aAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,QAAQ,EAAE,MAAM,IAAI,SAAS,MAAM,EAAE,UAAU,IAAI,SAAS,QAAQ,EAAE,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAAA,IACvN,OAAO;AAAA,IAEP;AAIA,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,SAAS,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,UAAU,WAAW,UAAU,CAAC;AACpJ,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,2BAAwB,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5I,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,eAAe,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AACnI,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,gBAAa,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AACjI,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,OAAO,MAAM,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AACtI,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,gBAAa,IAAI,OAAO,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE3L,WAAO,EAAE,MAAM,MAAM,8BAAwB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC;AACpG,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEhJ,WAAO,EAAE,MAAM,MAAM,4BAAsB,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACnG,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,QAAQ,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEpJ,WAAO,EAAE,MAAM,MAAM,6BAAuB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACpH,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEpK,WAAO,EAAE,MAAM,MAAM,8CAAwC,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACnI,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,IAAI,QAAQ,QAAQ,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEpK,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,KAAK,CAAC;AACxG,WAAO,EAAE,MAAM,MAAM,IAAI,MAAM,WAAW,IAAI,QAAQ,QAAQ,IAAI,QAAQ,GAAG,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAE/L,QAAI,WAAW;AAAA,EACnB;AAEA,iBAAe,UAAoC;AAC/C,QAAI,IAAI,WAAW,KAAM,QAAO,IAAI;AACpC,UAAM,SAAS,OAAO,WAAW;AACjC,QAAI,QAAQ;AAER,YAAM,EAAE,aAAa,IAAI,MAAM,OAAO,QAAQ;AAC9C,YAAM,SAAS,aAAa,KAAK,GAAG;AACpC,MAAAG,WAAU,QAAQ,IAAI,IAAI,OAAO,KAAK,GAAG;AAAA,QACrC,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,UAAU;AAAA,MACd,CAAC;AAED,UAAI,UAAU,OAAO,UAAU,WAAW;AAE1C,aAAO,IAAI;AAAA,IACf,OAAO;AAEH,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,YAAI;AACA,gBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,UAAAA,WAAU,QAAQ,IAAI,IAAI,OAAO,KAAK,GAAG;AAAA,YACrC,QAAQ;AAAA,YACR,cAAc;AAAA,YACd,UAAU;AAAA,UACd,CAAC;AAGD,cAAI,UAAU,OAAO,UAAU,WAAW;AAC1C,kBAAQ,IAAI,OAAO;AAAA,QACvB,SAAS,KAAK;AACV,iBAAO,GAAG;AAAA,QACd;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvD,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,KAAK,EAAE;AACrE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,OAAO,EAAE;AAC/D,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,KAAK,EAAE;AACrE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,MAAM,EAAE;AACtE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvE,WAAO,MAAM,IAAI,QAAQ,OAAO,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACvE,WAAO,MAAM,IAAI,QAAQ,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AACnE,WAAO,MAAM,IAAI,QAAQ,GAAG,IAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,EAAE;AAEnE,WAAO,EAAE,MAAM,MAAM,+BAA4B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,WAAW,UAAU,CAAC;AAE5H,WAAO,EAAE,MAAM,MAAM,0BAAuB,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAClG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEtI,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACtG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,QAAQ,IAAI,IAAI,OAAO,KAAK,KAAK,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEhM,WAAO,EAAE,MAAM,MAAM,sBAAmB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAC7G,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,KAAK,IAAI,OAAO,KAAK,EAAE,mBAAmB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEnM,WAAO,EAAE,MAAM,MAAM,eAAY,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACvF,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,GAAG,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,WAAQ,IAAI,IAAI,OAAO,KAAK,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,WAAW,UAAU,CAAC;AAE5M,WAAO,EAAE,MAAM,MAAM,mBAAmB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAC7G,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,SAAS,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAElL,WAAO,EAAE,MAAM,MAAM,OAAO,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACjG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,QAAQ,oBAAoB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEnN,WAAO,EAAE,MAAM,MAAM,2BAAwB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAClH,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,KAAK,IAAI,OAAO,KAAK,EAAE,mBAAmB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEnM,WAAO,EAAE,MAAM,MAAM,aAAa,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACxF,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,MAAM,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,WAAW,UAAU,CAAC;AAE9J,WAAO,EAAE,MAAM,MAAM,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAChG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,QAAQ,WAAW,UAAU,CAAC;AAE5K,WAAO,EAAE,MAAM,MAAM,YAAY,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AACvG,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,UAAU,QAAQ,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEtL,WAAO,EAAE,MAAM,MAAM,4BAAsB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAChH,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,OAAO,KAAK,MAAM,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEzK,WAAO,EAAE,MAAM,MAAM,2BAAwB,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,CAAC;AAClH,WAAO,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,KAAK,IAAI,OAAO,KAAK,EAAE,mBAAmB,OAAO,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,WAAW,UAAU,CAAC;AAEnM,QAAI,WAAW;AAAA,EACnB;AAEA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,EAAE,MAAM,MAAM,aAAa,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAE1G,UAAM,aAAa,MAAM,QAAQ,IAAI,SAAS,IAAI,IAAI,YAAY,CAAC,IAAI,SAAS;AAChF,UAAM,aAAkB;AAAA,MACpB,MAAM;AAAA,MAAY,MAAM;AAAA,MAAU,MAAM;AAAA,MAAqB,MAAM;AAAA,MAAoB,MAAM;AAAA,MAC7F,MAAM;AAAA,MAAoB,MAAM;AAAA,MAAiB,MAAM;AAAA,MAAiB,MAAM;AAAA,MAC9E,MAAM;AAAA,MAAmB,MAAM;AAAA,MAAqB,MAAM;AAAA,MAAO,MAAM;AAAA,MAAiB,MAAM;AAAA,MAC9F,MAAM;AAAA,MAAiB,MAAM;AAAA,IACjC;AAEA,QAAI,SAAS;AAEb,eAAW,OAAO,YAAY;AAC1B,YAAM,QAAQ,WAAW,IAAI,IAAI,KAAK,aAAU,IAAI,IAAI;AACxD,YAAM,QAAQ,WAAW,IAAI,IAAI,EAAE,eAAe,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC;AAEjG,aAAO,MAAM,GAAG,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,MAAM,EAAE;AAC9D,aAAO,EAAE,MAAM,MAAM,SAAS,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,QAAQ,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC7F,aAAO,EAAE,MAAM,MAAM,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,QAAQ,UAAU,IAAI,QAAQ,KAAK,CAAC;AAC5F,aAAO,EAAE,MAAM,MAAM,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,IAAI,QAAQ,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,WAAW,UAAU,CAAC;AAClI,aAAO,EAAE,MAAM,MAAM,OAAO,GAAG,GAAG,GAAG,IAAI,UAAU,KAAK,QAAQ,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,WAAW,UAAU,CAAC;AAEnI,gBAAU;AAAA,IACd;AAEA,QAAI,WAAW,SAAS;AAAA,EAC5B;AAGA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,UAAM,OAAY;AAAA,MACd,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,KAAK;AAAA,IACT;AAEA,WAAO,EAAE,MAAM,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;AAEvG,QAAI,QAAQ,IAAI,UAAU,GAAG,QAAQ,GAAG,SAAU,IAAI,QAAQ;AAE9D,eAAW,OAAO,OAAO,KAAK,IAAI,GAAG;AACjC,YAAM,QAAQ,KAAK,SAAS,GAAG,KAAK;AACpC,YAAM,QAAQ,QAAQ,WAAW,KAAK,EAAE,eAAe,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC,IAAI;AAE1G,YAAM,OAAO,MAAO,SAAS,QAAS,OAAO,OAAO,SAAS,OAAO,EAAE;AACtE,aAAO,EAAE,MAAM,MAAM,KAAK,GAAG,GAAG,GAAG,IAAK,SAAS,QAAS,OAAO,GAAG,QAAQ,GAAG,UAAU,SAAS,MAAM,CAAC;AACzG,aAAO,EAAE,MAAM,MAAM,IAAI,MAAM,MAAM,QAAQ,MAAM,EAAE,GAAG,GAAI,SAAS,QAAS,OAAO,GAAG,QAAQ,GAAG,UAAU,SAAS,OAAO,OAAO,SAAS,WAAW,UAAU,CAAC;AAEnK;AACA,UAAI,SAAS,GAAG;AACZ,gBAAQ;AACR,iBAAS;AAAA,MACb;AAAA,IACJ;AACA,QAAI,WAAW;AAAA,EACnB;AAIA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,QAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,MAAM,UAAU,IAAI,KAAK;AACtE,QAAI,UAAU,MAAM,QAAQ,IAAI,OAAO,IAAI,IAAI,UAAU,CAAC,IAAI,OAAO;AACrE,WAAO,EAAE,MAAM,MAAM,oCAAiC,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,WAAW,UAAU,CAAC;AAGvH,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,MAAM;AAClD,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9C,UAAM,UAAU,CAAC,KAAK,MAAM,MAAM,MAAM,KAAK,OAAO,MAAM,KAAK;AAC/D,eAAW,KAAK,QAAS,QAAO,MAAM,IAAI,QAAQ,GAAG,IAAI,UAAU,GAAG,MAAM;AAG5E,WAAO,EAAE,MAAM,MAAM,qBAAkB,GAAG,IAAI,QAAQ,MAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC9H,WAAO,EAAE,MAAM,MAAM,2CAAkC,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC7I,WAAO,EAAE,MAAM,MAAM,UAAU,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAErH,WAAO,EAAE,MAAM,MAAM,QAAQ,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACrH,WAAO,EAAE,MAAM,MAAM,MAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACnH,WAAO,EAAE,MAAM,MAAM,UAAU,GAAG,IAAI,QAAQ,KAAK,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AACrH,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC5H,WAAO,EAAE,MAAM,MAAM,cAAc,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAC3H,WAAO,EAAE,MAAM,MAAM,eAAe,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,KAAK,UAAU,IAAI,QAAQ,MAAM,OAAO,SAAS,CAAC;AAG7H,QAAI,OAAO,IACP,UAAU,KAAK,MAAM,SAAS,CAAC,GAC/B,SAAS;AACb,eAAW,CAAC,MAAM,IAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAE9C,gBAAU,MAAM,OAAO,EAAE,MAAM,MAAM,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG,UAAU,IAAI,QAAQ,MAAM,OAAO,UAAU,MAAM,KAAK,CAAC;AACtH,UAAI,UAAU,SAAS;AACnB,YAAI,QAAQ,OAAO,GAAG,IAAI;AAC1B,YAAI,WAAW,SAAS;AACxB,eAAO;AAAA,MACX;AAGA,YAAM,MAAM,CAAC,MAAW,WAAW,KAAK,MAAM,EAAE,eAAe,SAAS,EAAE,uBAAuB,EAAE,CAAC;AAEpG,YAAM,SAAS,MAAM,OAAO,EAAE,MAAM,MAAM,KAAK,OAAO,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,MAAM,UAAU,IAAI,QAAQ,MAAM,OAAO,OAAO,CAAC;AAC9I,YAAM,IAAI,IAAI,UAAU,QAAS,SAAS,KAAK;AAE/C,aAAO,EAAE,MAAM,MAAM,KAAK,QAAQ,IAAI,GAAG,GAAG,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,SAAS,CAAC;AAC3F,aAAO,EAAE,MAAM,MAAM,KAAK,OAAO,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAE1G,aAAO,EAAE,MAAM,MAAM,KAAK,QAAQ,IAAI,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC7G,aAAO,EAAE,MAAM,MAAM,KAAK,QAAQ,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC5G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC3G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,MAAM,GAAG,GAAG,IAAI,QAAQ,OAAO,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC9G,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,SAAS,CAAC,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AACjH,aAAO,EAAE,MAAM,MAAM,IAAI,KAAK,KAAK,GAAG,GAAG,IAAI,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,CAAC;AAC5G,cAAQ,SAAS;AAAA,IACrB;AACA,QAAI,WAAW,SAAS;AACxB,WAAO;AAAA,EACX;AAIA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,WAAO,EAAE,MAAM,MAAM,oBAAoB,GAAG,GAAG,GAAG,IAAI,SAAS,UAAU,IAAI,OAAO,WAAW,UAAU,CAAC;AAC1G,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9C,WAAO,MAAM,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,MAAM,EAAE;AAErD,WAAO,EAAE,MAAM,MAAM,oCAA8B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,QAAQ,WAAW,UAAU,CAAC;AAC7I,WAAO,EAAE,MAAM,MAAM,sBAAsB,GAAG,IAAI,QAAQ,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,KAAK,OAAO,QAAQ,WAAW,UAAU,CAAC;AACrJ,QAAI,WAAW;AAAA,EACnB;AAEA,iBAAe,OAAO,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC5D,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,gBAAgB,MAAM,mBAAmB,OAAO;AACtD,UAAM,gBAAgB,MAAM,mBAAmB,OAAO;AACtD,UAAM,gBAAgB,eAAe,aAAa,UAAO,aAAa;AAEtE,WAAO,EAAE,MAAM,MAAM,eAAe,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,OAAO,OAAO,OAAO,CAAC;AAClG,WAAO,EAAE,MAAM,MAAM,6BAA6B,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,UAAU,IAAI,QAAQ,OAAO,OAAO,SAAS,WAAW,SAAS,CAAC;AAAA,EAClJ;AAGA,iBAAe,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAOG;AACC,QAAI,OAAO,OAAO,QAAW;AACzB,UAAI,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,MAAM;AAC3C,cAAM,MAAM,MAAM,OAAO,EAAE,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAAE,KAAK,UAAQ,YAAY,IAAI,CAAC;AAEjG,YAAM,QAAQ,WAAW,KAAK,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,OAAK,EAAE,WAAW,CAAC,CAAC;AAG3E,YAAM,QAAQ,KAAK,WAAW,gBAAgB;AAG9C,YAAM,QAAQ,QACR,MAAM,IAAI,IAAI,SAAS,KAAK,IAC5B,MAAM,IAAI,IAAI,SAAS,KAAK;AAElC,YAAM,KAAK,UAAU,OAAO;AAAA,QACxB;AAAA,QACA,GAAG,IAAI,SAAS,IAAI;AAAA;AAAA,QACpB,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,EACJ;AAGA,iBAAe,YAAY,cAAiC;AACxD,UAAMC,aAAY,OAAO,WAAW,eAAe,OAAO,OAAO,eAAe;AAChF,QAAIA,YAAW;AAEX,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAM,SAAS,IAAI,WAAW;AAC9B,eAAO,cAAc,YAAY;AACjC,eAAO,YAAY,MAAM,QAAQ,OAAO,MAAM;AAC9C,eAAO,UAAU;AAAA,MACrB,CAAC;AAAA,IACL,OAAO;AAEH,UAAI;AACA,YAAI;AAEJ,YAAI,wBAAwB,MAAM;AAC9B,gBAAM,cAAc,MAAM,aAAa,YAAY;AACnD,mBAAS,OAAO,KAAK,WAAW;AAAA,QACpC,WAAW,OAAO,SAAS,YAAY,GAAG;AACtC,mBAAS;AAAA,QACb,OAAO;AACH,mBAAS,OAAO,KAAK,YAAY;AAAA,QACrC;AACA,eAAO,OAAO,SAAS,QAAQ;AAAA,MACnC,SAAS,KAAK;AACV,cAAM,IAAI,MAAM,uBAAuB,GAAG,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EACJ;AAGA,iBAAe,UAAU,OAAO,IAAI,MAAO,IAAI,MAAM,SAAS,CAAE,GAAG;AAC/D,cAAU,MAAM,MAAM,WAAW,EAAE,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAAE,KAAK,UAAQ,YAAY,IAAI,CAAC;AAGrG,UAAM,aAAa,SAAS,MAAM,GAAG,EAAE,CAAC;AACxC,UAAM,QAAQ,WAAW,KAAK,KAAK,UAAU,GAAG,OAAK,EAAE,WAAW,CAAC,CAAC;AAGpE,UAAM,QAAQ,SAAS,WAAW,gBAAgB;AAGlD,UAAM,QAAQ,QACR,MAAM,IAAI,IAAI,SAAS,KAAK,IAC5B,MAAM,IAAI,IAAI,SAAS,KAAK;AAElC,SAAK,UAAU,OAAO;AAAA,MAClB,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,MACH,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA,IAChB,CAAC;AAAA,EACL;AAIA,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC1C,UAAM,YAAY;AAClB,YAAQ,MAAM,IAAI,IAAI,KAAK,CAAC;AAAA,EAChC,CAAC;AACL;","names":["isBrowser","PDFDocument","StandardFonts","rgb","XMLParser","pag","detPag","dest","isBrowser","PDFDocument","StandardFonts","rgb","XMLParser","JsBarcode","isBrowser"]}